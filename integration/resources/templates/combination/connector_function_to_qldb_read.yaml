Resources:
  MyRole1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  TriggerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt MyRole1.Arn
      Runtime: nodejs14.x
      Handler: index.handler
      Code:
        InlineCode: |
          exports.handler = async (event) => {
            console.log("Hello world!")
          };

  MyLedger:
    Type: AWS::QLDB::Ledger
    Properties:
      PermissionsMode: STANDARD

  MyConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: TriggerFunction
      Destination:
        Id: MyLedger
      Permissions:
        - Read

Metadata:
  SamTransformTest: true
