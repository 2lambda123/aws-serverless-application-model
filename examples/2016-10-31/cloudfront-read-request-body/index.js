/*
 * This function demonstrates how you can process a POST request generated by
 * an HTML form(like the one below) such as a "contact us" form with Lambda@Edge 
 * function associated with viewer-request or origin-request event type.
 *
 * <html>
 *  <form action="http://example.com" method="post">
 *      Param 1: <input type="text" name="name1"><br>
 *      Param 2: <input type="text" name="name2"><br>
 *      <input type="submit" value="Submit">
 *  </form>
 * </html>
 */
'use strict';
const querystring = require('querystring');

exports.handler = (event, context, callback) => {
    const request = event.Records[0].cf.request;

    if (request.method === 'POST') {
        /* HTTP body is always passed as base64-encoded string. Decode it. */
        const body = Buffer.from(request.body.data, 'base64').toString();

        /* HTML forms send the data in query string format. Parse it. */
        const params = querystring.parse(body);

        /* For demonstration purposes, we only log the form fields here.
         * You can put your custom logic here, for example, you can store the 
         * fields in a database, such as AWS DynamoDB, and generate a response
         * right from your Lambda@Edge function.
         */
        for (let param in params) {
            console.log(`For "${param}" user submitted "${params[param]}".\n`);
        }
    }
    return callback(null, request);
};