{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A template to test for implicit API condition handling.",
  "Conditions": {
    "MyCondition": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond1": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond2": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond3": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond4": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond5": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond6": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond7": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond8": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond9": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond10": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond11": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond12": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond13": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond14": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "Cond15": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "SamImplicitApiCondition1": {
      "Fn::Or": [
        {
          "Condition": "Cond12"
        },
        {
          "Condition": "MyCondition"
        },
        {
          "Condition": "Cond15"
        },
        {
          "Condition": "Cond10"
        },
        {
          "Condition": "Cond3"
        },
        {
          "Condition": "Cond13"
        },
        {
          "Condition": "Cond9"
        },
        {
          "Condition": "Cond8"
        },
        {
          "Condition": "Cond11"
        },
        {
          "Condition": "Cond4"
        }
      ]
    },
    "SamImplicitApiCondition": {
      "Fn::Or": [
        {
          "Condition": "Cond"
        },
        {
          "Condition": "Cond5"
        },
        {
          "Condition": "Cond1"
        },
        {
          "Condition": "Cond2"
        },
        {
          "Condition": "Cond14"
        },
        {
          "Condition": "Cond7"
        },
        {
          "Condition": "Cond6"
        },
        {
          "Condition": "SamImplicitApiCondition1"
        }
      ]
    }
  },
  "Resources": {
    "hello": {
      "Type": "AWS::Lambda::Function",
      "Condition": "MyCondition",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloRole": {
      "Type": "AWS::IAM::Role",
      "Condition": "MyCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "MyCondition",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "hello"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/sub",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "MyCondition",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "hello"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/sub",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworldRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworldRole": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworldApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworldApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld1": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond1",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld1Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld1Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld1ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond1",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld1"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub1",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld1ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond1",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld1"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub1",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld2": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond2",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld2Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld2Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond2",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld2ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond2",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld2"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub2",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld2ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond2",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld2"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub2",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld3": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond3",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld3Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld3Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond3",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld3ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond3",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld3"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub3",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld3ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond3",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld3"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub3",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld4": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond4",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld4Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld4Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond4",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld4ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond4",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld4"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub4",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld4ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond4",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld4"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub4",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld5": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond5",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld5Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld5Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond5",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld5ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond5",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld5"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub5",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld5ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond5",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld5"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub5",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld6": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond6",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld6Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld6Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond6",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld6ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond6",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld6"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub6",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld6ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond6",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld6"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub6",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld7": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond7",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld7Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld7Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond7",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld7ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond7",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld7"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub7",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld7ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond7",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld7"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub7",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld8": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond8",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld8Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld8Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond8",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld8ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond8",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld8"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub8",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld8ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond8",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld8"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub8",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld9": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond9",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld9Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld9Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond9",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld9ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond9",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld9"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub9",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld9ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond9",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld9"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub9",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld10": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond10",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld10Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld10Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond10",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld10ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond10",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld10"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub10",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld10ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond10",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld10"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub10",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld11": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond11",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld11Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld11Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond11",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld11ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond11",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld11"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub11",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld11ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond11",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld11"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub11",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld12": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond12",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld12Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld12Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond12",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld12ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond12",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld12"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub12",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld12ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond12",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld12"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub12",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld13": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond13",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld13Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld13Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond13",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld13ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond13",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld13"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub13",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld13ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond13",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld13"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub13",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld14": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond14",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld14Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld14Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond14",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld14ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond14",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld14"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub14",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld14ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond14",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld14"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub14",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "helloworld15": {
      "Type": "AWS::Lambda::Function",
      "Condition": "Cond15",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async () => \u2018Hello World!'\n"
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "helloworld15Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 3,
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "helloworld15Role": {
      "Type": "AWS::IAM::Role",
      "Condition": "Cond15",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "helloworld15ApiEventPermissionTest": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond15",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld15"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/sub15",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "helloworld15ApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Condition": "Cond15",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "helloworld15"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/sub15",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "Prod"
            }
          ]
        }
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Condition": "SamImplicitApiCondition",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/sub": {
              "get": {
                "Fn::If": [
                  "MyCondition",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "MyCondition",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${hello.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "post": {
                "Fn::If": [
                  "Cond",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub1": {
              "post": {
                "Fn::If": [
                  "Cond1",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond1",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub2": {
              "post": {
                "Fn::If": [
                  "Cond2",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond2",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld2.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub3": {
              "post": {
                "Fn::If": [
                  "Cond3",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond3",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld3.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub4": {
              "post": {
                "Fn::If": [
                  "Cond4",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond4",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld4.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub5": {
              "post": {
                "Fn::If": [
                  "Cond5",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond5",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld5.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub6": {
              "post": {
                "Fn::If": [
                  "Cond6",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond6",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld6.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub7": {
              "post": {
                "Fn::If": [
                  "Cond7",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond7",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld7.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub8": {
              "post": {
                "Fn::If": [
                  "Cond8",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond8",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld8.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub9": {
              "post": {
                "Fn::If": [
                  "Cond9",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond9",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld9.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub10": {
              "post": {
                "Fn::If": [
                  "Cond10",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond10",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld10.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub11": {
              "post": {
                "Fn::If": [
                  "Cond11",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond11",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld11.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub12": {
              "post": {
                "Fn::If": [
                  "Cond12",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond12",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld12.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub13": {
              "post": {
                "Fn::If": [
                  "Cond13",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond13",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld13.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub14": {
              "post": {
                "Fn::If": [
                  "Cond14",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond14",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld14.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            "/sub15": {
              "x-amazon-apigateway-any-method": {
                "Fn::If": [
                  "Cond15",
                  {
                    "x-amazon-apigateway-integration": {
                      "type": "aws_proxy",
                      "httpMethod": "POST",
                      "uri": {
                        "Fn::If": [
                          "Cond15",
                          {
                            "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld15.Arn}/invocations"
                          },
                          {
                            "Ref": "AWS::NoValue"
                          }
                        ]
                      }
                    },
                    "responses": {}
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            }
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "ServerlessRestApiDeployment9b9ac15ff9": {
      "Type": "AWS::ApiGateway::Deployment",
      "Condition": "SamImplicitApiCondition",
      "Properties": {
        "Description": "RestApi deployment id: 9b9ac15ff97ae395042407468edb8c4da553cf97",
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Stage"
      }
    },
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Condition": "SamImplicitApiCondition",
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment9b9ac15ff9"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      }
    }
  }
}