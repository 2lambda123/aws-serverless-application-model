{
  "Resources": {
    "MyFunctionOne": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  return {\n  statusCode: 200,\n  body: JSON.stringify(event),\n  headers: {}\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionOneRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionOneRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionOneApiKeyAnyMethodPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionOne"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/path/one",
            {
              "__ApiId__": {
                "Ref": "MyApiOne"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionOneApiKeyPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionOne"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/one",
            {
              "__ApiId__": {
                "Ref": "MyApiOne"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionTwo": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  return {\n  statusCode: 200,\n  body: JSON.stringify(event),\n  headers: {}\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionTwoRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionTwoRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionTwoImplicitApiEventPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionTwo"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/event",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionTwoApiKeyPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionTwo"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/two",
            {
              "__ApiId__": {
                "Ref": "MyApiTwo"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionThree": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  return {\n  statusCode: 200,\n  body: JSON.stringify(event),\n  headers: {}\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionThreeRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionThreeRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionThreeApiKeyPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionThree"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/three",
            {
              "__ApiId__": {
                "Ref": "MyApiThree"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyApiOne": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/path/one": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionOne.Arn}/invocations"
                  }
                },
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ]
              }
            },
            "/any/path/one": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionOne.Arn}/invocations"
                  }
                },
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ]
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "type": "apiKey",
              "name": "x-api-key",
              "in": "header"
            }
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "MyApiOneDeploymentf5f01170d6": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: f5f01170d62670e39d1d14f7787b98d12dc64ac8",
        "RestApiId": {
          "Ref": "MyApiOne"
        },
        "StageName": "Stage"
      }
    },
    "MyApiOneProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiOneDeploymentf5f01170d6"
        },
        "RestApiId": {
          "Ref": "MyApiOne"
        },
        "StageName": "Prod"
      }
    },
    "MyApiTwo": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/path/two": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionTwo.Arn}/invocations"
                  }
                },
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ]
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "type": "apiKey",
              "name": "x-api-key",
              "in": "header"
            }
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "MyApiTwoDeployment15a3902b45": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: 15a3902b458d0a1a4f8803252344e76b43375bbb",
        "RestApiId": {
          "Ref": "MyApiTwo"
        },
        "StageName": "Stage"
      }
    },
    "MyApiTwoProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiTwoDeployment15a3902b45"
        },
        "RestApiId": {
          "Ref": "MyApiTwo"
        },
        "StageName": "Prod"
      }
    },
    "MyApiTwoUsagePlan": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "DependsOn": [
        "MyApiTwo"
      ],
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "MyApiTwo"
            },
            "Stage": {
              "Ref": "MyApiTwoProdStage"
            }
          }
        ],
        "Description": "Description for usage plan",
        "Quota": {
          "Limit": 10,
          "Offset": 10,
          "Period": "MONTH"
        },
        "Tags": [
          {
            "Key": "key1",
            "Value": "value1"
          },
          {
            "Key": "key2",
            "Value": "value2"
          }
        ],
        "Throttle": {
          "BurstLimit": 1000,
          "RateLimit": 1000
        },
        "UsagePlanName": "SomeRandomName"
      }
    },
    "MyApiTwoApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": [
        "MyApiTwoUsagePlan"
      ],
      "Properties": {
        "Enabled": true,
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "MyApiTwo"
            },
            "StageName": {
              "Ref": "MyApiTwoProdStage"
            }
          }
        ]
      }
    },
    "MyApiTwoUsagePlanKey": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "DependsOn": [
        "MyApiTwoApiKey"
      ],
      "Properties": {
        "KeyId": {
          "Ref": "MyApiTwoApiKey"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "MyApiTwoUsagePlan"
        }
      }
    },
    "MyApiThree": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/path/three": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionThree.Arn}/invocations"
                  }
                },
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ]
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "type": "apiKey",
              "name": "x-api-key",
              "in": "header"
            }
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "MyApiThreeDeploymentac8c00f0e1": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: ac8c00f0e1e81ee603d7b7bd216d64a1cd4f93c4",
        "RestApiId": {
          "Ref": "MyApiThree"
        },
        "StageName": "Stage"
      }
    },
    "MyApiThreeProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiThreeDeploymentac8c00f0e1"
        },
        "RestApiId": {
          "Ref": "MyApiThree"
        },
        "StageName": "Prod"
      }
    },
    "ServerlessUsagePlan": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "DependsOn": [
        "MyApiThree",
        "ServerlessRestApi"
      ],
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "MyApiThree"
            },
            "Stage": {
              "Ref": "MyApiThreeProdStage"
            }
          },
          {
            "ApiId": {
              "Ref": "ServerlessRestApi"
            },
            "Stage": {
              "Ref": "ServerlessRestApiProdStage"
            }
          }
        ]
      }
    },
    "ServerlessApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": [
        "ServerlessUsagePlan"
      ],
      "Properties": {
        "Enabled": true,
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "MyApiThree"
            },
            "StageName": {
              "Ref": "MyApiThreeProdStage"
            }
          },
          {
            "RestApiId": {
              "Ref": "ServerlessRestApi"
            },
            "StageName": {
              "Ref": "ServerlessRestApiProdStage"
            }
          }
        ]
      }
    },
    "ServerlessUsagePlanKey": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "DependsOn": [
        "ServerlessApiKey"
      ],
      "Properties": {
        "KeyId": {
          "Ref": "ServerlessApiKey"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "ServerlessUsagePlan"
        }
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/path/event": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionTwo.Arn}/invocations"
                  }
                },
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ]
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "type": "apiKey",
              "name": "x-api-key",
              "in": "header"
            }
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "ServerlessRestApiDeploymenta0d0b9dc98": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: a0d0b9dc987eb88d0d91c92ab126778a2ed9d390",
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Stage"
      }
    },
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeploymenta0d0b9dc98"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      }
    }
  },
  "Outputs": {
    "ApiOneUrl": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${MyApiOne}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    },
    "ApiTwoUrl": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${MyApiTwo}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    },
    "ApiThreeUrl": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${MyApiThree}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    },
    "UsagePlan": {
      "Description": "Usage Plan physical Id",
      "Value": {
        "Ref": "MyApiTwoUsagePlan"
      }
    },
    "UsagePlanKey": {
      "Description": "Usage Plan Key",
      "Value": {
        "Ref": "MyApiTwoUsagePlanKey"
      }
    },
    "ApiKey": {
      "Description": "Api Key",
      "Value": {
        "Ref": "ServerlessApiKey"
      }
    }
  }
}