{
  "Resources": {
    "MyBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "MyFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "bar"
        },
        "Handler": "foo",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyHttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {},
          "openapi": "3.0.1",
          "tags": [
            {
              "name": "httpapi:createdBy",
              "x-amazon-apigateway-tag-value": "SAM"
            }
          ]
        }
      }
    },
    "MyHttpApiProdStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "MyHttpApi"
        },
        "StageName": "Prod",
        "Tags": {
          "httpapi:createdBy": "SAM"
        },
        "AutoDeploy": true
      }
    },
    "MyBucketMyConnectorWriteLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Metadata": {
        "aws:sam:connectors": {
          "MyBucketMyConnector": {
            "Source": {
              "Type": "AWS::S3::Bucket"
            },
            "Destination": {
              "Type": "AWS::Serverless::Function"
            }
          }
        }
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunction",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Fn::Sub": "${AWS::AccountId}"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "MyBucket",
            "Arn"
          ]
        }
      }
    },
    "MyHttpApiMyConnector1WriteLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Metadata": {
        "aws:sam:connectors": {
          "MyHttpApiMyConnector1": {
            "Source": {
              "Type": "AWS::Serverless::HttpApi"
            },
            "Destination": {
              "Type": "AWS::Lambda::Function"
            }
          }
        }
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": "arn:foo",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SourceResourceId}/${SourceQualifier}",
            {
              "SourceResourceId": {
                "Ref": "MyHttpApi"
              },
              "SourceQualifier": "*"
            }
          ]
        }
      }
    },
    "MyHttpApiMyConnector2WriteLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Metadata": {
        "aws:sam:connectors": {
          "MyHttpApiMyConnector2": {
            "Source": {
              "Type": "AWS::Serverless::HttpApi"
            },
            "Destination": {
              "Type": "AWS::Serverless::Function"
            }
          }
        }
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${SourceResourceId}/${SourceQualifier}",
            {
              "SourceResourceId": {
                "Ref": "MyHttpApi"
              },
              "SourceQualifier": "*"
            }
          ]
        }
      }
    }
  }
}