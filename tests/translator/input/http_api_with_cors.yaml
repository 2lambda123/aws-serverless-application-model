Conditions:
  C1:
    Fn::Equals:
      - true
      - true

Mappings:
  RegionMap:
    cn-north-1:
      exposeHeaders:
        - header1
    us-west-2:
      exposeHeaders:
        - header2
    us-gov-west-1:
      exposeHeaders:
        - header3
    ap-southeast-1:
      exposeHeaders:
        - header4
Globals:
  HttpApi:
    CorsConfiguration:
      Fn::If:
        - C1
        - AllowHeaders:
            - x-apigateway-header
          AllowMethods:
            - GET
          AllowOrigins:
            Fn::If:
              - C1
              - - https://foo.com
              - - '*'
          ExposeHeaders: !FindInMap
            - RegionMap
            - !Ref 'AWS::Region'
            - exposeHeaders
        - AWS::NoValue

Resources:
  HttpApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
         exports.handler = async (event) => {
          console.log("Hello from MyAuthFunction")
           return {
           statusCode: 200,
           body: JSON.stringify(event),
           headers: {}
           }
         }
      Handler: index.handler
      Runtime: nodejs12.x
      Events:
        SimpleCase:
          Type: HttpApi
          Properties:
            ApiId: !Ref MyApi
        ImplicitApi:
          Type: HttpApi

  MyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      DefinitionBody:
        info:
          version: '1.0'
          title:
            Ref: AWS::StackName
        paths:
          "$default":
            x-amazon-apigateway-any-method:
              isDefaultRoute: true
        openapi: 3.0.1
        # When intrinsics are given cors overrides open api with the `CorsConfiguration`
        x-amazon-apigateway-cors:
          allowOrigins:
            - "https://overridden.com"