Parameters:
  MyAlias:
    Type: String
    Default: ""
Resources:
  InvalidAutoPublishAliasFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.lambda_handler
      CodeUri: s3://bucket/object
      Runtime: python3.7
      AutoPublishAlias:
        Ref: MyAlias
      Events:
        Get:
          Type: Api
          Properties:
            Path: "/path"
            Method: GET
# ---
# Parameters:
#   Branch:
#     Type: String
#     Default: "DeploymentBucket"
# Globals:
#   Function:
#     AutoPublishAlias:
#       Ref: Branch
# Description: __HIDDEN__
# Resources:
#   # AdminAPICustomDomainRoute53:
#   #   Type: AWS::Route53::RecordSet
#   #   Properties:
#   #     HostedZoneName:
#   #       Ref: HostedZoneName
#   #     ResourceRecords:
#   #     - Fn::GetAtt:
#   #       - AdminAPICustomDomain
#   #       - DistributionDomainName
#   #     Type: CNAME
#   #     Name:
#   #       Fn::Sub: "${Branch}-${DomainName}"
#   #     TTL: 300
#   TestFunction:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://bucket/object
#       Handler: lambda_test.lambda_handler
#       Role:
#         Fn::GetAtt:
#         - LambdaExecutionRole
#         - Arn
#       Events:
#         GetEvent:
#           Type: Api
#           Properties:
#             Path: "/dar/test"
#             Method: GET
#       Runtime: python3.7
#   AdminAPICustomDomain:
#     Type: AWS::ApiGateway::DomainName
#     Properties:
#       CertificateArn:
#         Ref: DomainCertificateArn
#       DomainName:
#         Fn::Sub: "${Branch}-${DomainName}"
#   AdminAPICustomDomainBasePath:
#     Type: AWS::ApiGateway::BasePathMapping
#     Properties:
#       DomainName:
#         Ref: AdminAPICustomDomain
#       RestApiId:
#         Ref: AdminApi
#       Stage:
#         Ref: Branch
#   ControlFileFunction:
#     Type: AWS::Serverless::Function
#     Properties:
#       Handler: mdlcontrolfile.lambda_handler
#       Role:
#         Fn::GetAtt:
#         - LambdaExecutionRole
#         - Arn
#       Timeout: 60
#       CodeUri: s3://bucket/object
#       Runtime: python3.7
#       Events:
#         GetEvent:
#           Type: Api
#           Properties:
#             Path: "/dar/controlFile/create"
#             Method: GET
#   LambdaExecutionRole:
#     Type: AWS::IAM::Role
#     Properties:
#       Policies:
#       - PolicyName: AllowS3AssumeRole
#         PolicyDocument:
#           Version: '2012-10-17'
#           Statement:
#           - Action: s3:*
#             Resource:
#             - arn:aws:s3:::darmdl-test1
#             - arn:aws:s3:::darmdl-test1/*
#             Effect: Allow
#           - Action: sts:AssumeRole
#             Resource: arn:aws:iam::176494265958:role/EMR_EC2_DefaultRole
#             Effect: Allow
#       AssumeRolePolicyDocument:
#         Version: '2012-10-17'
#         Statement:
#         - Action: sts:AssumeRole
#           Effect: Allow
#           Principal:
#             Service: lambda.amazonaws.com
