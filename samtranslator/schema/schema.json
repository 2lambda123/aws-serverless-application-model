{
  "title": "Model",
  "type": "object",
  "properties": {
    "AWSTemplateFormatVersion": {
      "title": "Awstemplateformatversion",
      "type": "string"
    },
    "Conditions": {
      "title": "Conditions"
    },
    "Description": {
      "title": "Description",
      "type": "string"
    },
    "Globals": {
      "title": "Globals"
    },
    "Mappings": {
      "title": "Mappings"
    },
    "Metadata": {
      "title": "Metadata"
    },
    "Outputs": {
      "title": "Outputs"
    },
    "Parameters": {
      "title": "Parameters"
    },
    "Resources": {
      "title": "Resources",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/AwsServerlessApi"
          },
          {
            "$ref": "#/definitions/AwsServerlessApplication"
          },
          {
            "$ref": "#/definitions/AwsServerlessFunction"
          },
          {
            "$ref": "#/definitions/AwsServerlessHttpApi"
          },
          {
            "$ref": "#/definitions/AwsServerlessLayerVersion"
          },
          {
            "$ref": "#/definitions/AwsServerlessSimpleTable"
          },
          {
            "$ref": "#/definitions/AwsServerlessStateMachine"
          },
          {
            "$ref": "#/definitions/Partial"
          }
        ]
      }
    },
    "Transform": {
      "title": "Transform",
      "type": "string"
    }
  },
  "required": [
    "Resources"
  ],
  "definitions": {
    "Ref": {
      "title": "Ref",
      "type": "object",
      "properties": {
        "Ref": {
          "title": "Ref",
          "type": "string"
        }
      },
      "required": [
        "Ref"
      ]
    },
    "FnJoin": {
      "title": "FnJoin",
      "type": "object",
      "properties": {
        "Fn::Join": {
          "title": "Fn::Join",
          "minItems": 2,
          "maxItems": 2,
          "type": "array",
          "items": {
            "anyOf": [
              {},
              {
                "type": "array",
                "items": {},
                "minItems": 2,
                "maxItems": 2
              }
            ]
          }
        }
      },
      "required": [
        "Fn::Join"
      ]
    },
    "FnSub": {
      "title": "FnSub",
      "type": "object",
      "properties": {
        "Fn::Sub": {
          "title": "Fn::Sub",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              }
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "Fn::Sub"
      ]
    },
    "FnGetAtt": {
      "title": "FnGetAtt",
      "type": "object",
      "properties": {
        "Fn::GetAtt": {
          "title": "Fn::Getatt",
          "anyOf": [
            {
              "type": "array",
              "items": {}
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "Fn::GetAtt"
      ]
    },
    "FnIf": {
      "title": "FnIf",
      "type": "object",
      "properties": {
        "Fn::If": {
          "title": "Fn::If",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "Fn::If"
      ]
    },
    "FnFindInMap": {
      "title": "FnFindInMap",
      "type": "object",
      "properties": {
        "Fn::FindInMap": {
          "title": "Fn::Findinmap",
          "minItems": 3,
          "maxItems": 3,
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "Fn::FindInMap"
      ]
    },
    "FnSelect": {
      "title": "FnSelect",
      "type": "object",
      "properties": {
        "Fn::Select": {
          "title": "Fn::Select",
          "minItems": 2,
          "maxItems": 2,
          "type": "array",
          "items": {
            "anyOf": [
              {},
              {
                "type": "array",
                "items": {},
                "minItems": 2,
                "maxItems": 2
              }
            ]
          }
        }
      },
      "required": [
        "Fn::Select"
      ]
    },
    "CfnString": {
      "title": "CfnString",
      "description": "A CloudFormation string with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "string"
        }
      ]
    },
    "AccessLogSetting": {
      "title": "AccessLogSetting",
      "type": "object",
      "properties": {
        "DestinationArn": {
          "$ref": "#/definitions/CfnString"
        },
        "Format": {
          "$ref": "#/definitions/CfnString"
        }
      }
    },
    "SamStringList": {
      "title": "SamStringList",
      "description": "List of strings with partial support for intrinsics.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Ref"
              },
              {
                "$ref": "#/definitions/FnJoin"
              },
              {
                "$ref": "#/definitions/FnSub"
              },
              {
                "$ref": "#/definitions/FnGetAtt"
              },
              {
                "$ref": "#/definitions/FnIf"
              },
              {
                "$ref": "#/definitions/FnFindInMap"
              },
              {
                "$ref": "#/definitions/FnSelect"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    "SamString": {
      "title": "SamString",
      "description": "String with partial support for intrinsics.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "string"
        }
      ]
    },
    "SamInteger": {
      "title": "SamInteger",
      "description": "Integer with partial support for intrinsics.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "number"
        }
      ]
    },
    "Identity": {
      "title": "Identity",
      "type": "object",
      "properties": {
        "Header": {
          "$ref": "#/definitions/SamString"
        },
        "ReauthorizeEvery": {
          "$ref": "#/definitions/SamInteger"
        },
        "ValidationExpression": {
          "$ref": "#/definitions/SamString"
        }
      }
    },
    "SamString1": {
      "title": "SamString1",
      "description": "A CloudFormation string with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "string"
        }
      ]
    },
    "CognitoAuthorizer": {
      "title": "CognitoAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "$ref": "#/definitions/SamStringList"
        },
        "Identity": {
          "$ref": "#/definitions/Identity"
        },
        "UserPoolArn": {
          "$ref": "#/definitions/SamString1"
        }
      },
      "required": [
        "UserPoolArn"
      ]
    },
    "Identity2": {
      "title": "Identity2",
      "type": "object",
      "properties": {
        "ReauthorizeEvery": {
          "$ref": "#/definitions/SamInteger"
        },
        "ValidationExpression": {
          "$ref": "#/definitions/SamString"
        }
      }
    },
    "LambdaTokenAuthorizer": {
      "title": "LambdaTokenAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "$ref": "#/definitions/SamStringList"
        },
        "FunctionArn": {
          "$ref": "#/definitions/SamString1"
        },
        "FunctionInvokeRole": {
          "$ref": "#/definitions/SamString"
        },
        "FunctionPayloadType": {
          "$ref": "#/definitions/SamString"
        },
        "Identity": {
          "$ref": "#/definitions/Identity2"
        }
      },
      "required": [
        "FunctionArn"
      ]
    },
    "Identity1": {
      "title": "Identity1",
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/SamStringList"
        },
        "Headers": {
          "$ref": "#/definitions/SamStringList"
        },
        "QueryStrings": {
          "$ref": "#/definitions/SamStringList"
        },
        "ReauthorizeEvery": {
          "$ref": "#/definitions/SamInteger"
        },
        "StageVariables": {
          "$ref": "#/definitions/SamStringList"
        }
      }
    },
    "LambdaRequestAuthorizer": {
      "title": "LambdaRequestAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "$ref": "#/definitions/SamStringList"
        },
        "FunctionArn": {
          "$ref": "#/definitions/SamString"
        },
        "FunctionInvokeRole": {
          "$ref": "#/definitions/SamString"
        },
        "FunctionPayloadType": {
          "$ref": "#/definitions/SamString"
        },
        "Identity": {
          "$ref": "#/definitions/Identity1"
        }
      }
    },
    "ResourcePolicy1": {
      "title": "ResourcePolicy1",
      "type": "object",
      "properties": {
        "AwsAccountBlacklist": {
          "$ref": "#/definitions/SamStringList"
        },
        "AwsAccountWhitelist": {
          "$ref": "#/definitions/SamStringList"
        },
        "CustomStatements": {
          "title": "Customstatements"
        },
        "IntrinsicVpcBlacklist": {
          "$ref": "#/definitions/SamStringList"
        },
        "IntrinsicVpcWhitelist": {
          "$ref": "#/definitions/SamStringList"
        },
        "IntrinsicVpceBlacklist": {
          "$ref": "#/definitions/SamStringList"
        },
        "IntrinsicVpceWhitelist": {
          "$ref": "#/definitions/SamStringList"
        },
        "IpRangeBlacklist": {
          "$ref": "#/definitions/SamStringList"
        },
        "IpRangeWhitelist": {
          "$ref": "#/definitions/SamStringList"
        },
        "SourceVpcBlacklist": {
          "$ref": "#/definitions/SamStringList"
        },
        "SourceVpcWhitelist": {
          "$ref": "#/definitions/SamStringList"
        }
      }
    },
    "CfnInteger": {
      "title": "CfnInteger",
      "description": "A CloudFormation integer with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "number"
        }
      ]
    },
    "Quota": {
      "title": "Quota",
      "type": "object",
      "properties": {
        "Limit": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Offset": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Period": {
          "$ref": "#/definitions/CfnString"
        }
      }
    },
    "CfnString1": {
      "title": "CfnString1",
      "description": "A CloudFormation string with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "string"
        }
      ]
    },
    "Tag": {
      "title": "Tag",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/CfnString1"
        },
        "Value": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Key",
        "Value"
      ]
    },
    "CfnDouble": {
      "title": "CfnDouble",
      "description": "A CloudFormation double with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "number"
        }
      ]
    },
    "Throttle": {
      "title": "Throttle",
      "type": "object",
      "properties": {
        "BurstLimit": {
          "$ref": "#/definitions/CfnInteger"
        },
        "RateLimit": {
          "$ref": "#/definitions/CfnDouble"
        }
      }
    },
    "UsagePlan": {
      "title": "UsagePlan",
      "type": "object",
      "properties": {
        "CreateUsagePlan": {
          "$ref": "#/definitions/SamString1"
        },
        "Description": {
          "$ref": "#/definitions/CfnString"
        },
        "Quota": {
          "$ref": "#/definitions/Quota"
        },
        "Tags": {
          "title": "Tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "Throttle": {
          "$ref": "#/definitions/Throttle"
        },
        "UsagePlanName": {
          "$ref": "#/definitions/CfnString"
        }
      },
      "required": [
        "CreateUsagePlan"
      ]
    },
    "Auth1": {
      "title": "Auth1",
      "type": "object",
      "properties": {
        "AddDefaultAuthorizerToCorsPreflight": {
          "title": "Adddefaultauthorizertocorspreflight",
          "type": "boolean"
        },
        "ApiKeyRequired": {
          "title": "Apikeyrequired",
          "type": "boolean"
        },
        "Authorizers": {
          "title": "Authorizers",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/CognitoAuthorizer"
              },
              {
                "$ref": "#/definitions/LambdaTokenAuthorizer"
              },
              {
                "$ref": "#/definitions/LambdaRequestAuthorizer"
              }
            ]
          }
        },
        "DefaultAuthorizer": {
          "$ref": "#/definitions/SamString"
        },
        "InvokeRole": {
          "$ref": "#/definitions/SamString"
        },
        "ResourcePolicy": {
          "$ref": "#/definitions/ResourcePolicy1"
        },
        "UsagePlan": {
          "$ref": "#/definitions/UsagePlan"
        }
      }
    },
    "CfnStringList": {
      "title": "CfnStringList",
      "description": "A CloudFormation list of strings with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CfnString1"
          }
        }
      ]
    },
    "CfnBoolean": {
      "title": "CfnBoolean",
      "description": "A CloudFormation boolean with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "CanarySetting": {
      "title": "CanarySetting",
      "type": "object",
      "properties": {
        "DeploymentId": {
          "$ref": "#/definitions/CfnString"
        },
        "PercentTraffic": {
          "$ref": "#/definitions/CfnDouble"
        },
        "StageVariableOverrides": {
          "title": "Stagevariableoverrides"
        },
        "UseStageCache": {
          "$ref": "#/definitions/CfnBoolean"
        }
      }
    },
    "SamBoolean": {
      "title": "SamBoolean",
      "description": "Boolean with partial support for intrinsics.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "Cor": {
      "title": "Cor",
      "type": "object",
      "properties": {
        "AllowCredentials": {
          "$ref": "#/definitions/SamBoolean"
        },
        "AllowHeaders": {
          "$ref": "#/definitions/SamString"
        },
        "AllowMethods": {
          "$ref": "#/definitions/SamString"
        },
        "AllowOrigin": {
          "$ref": "#/definitions/SamString1"
        },
        "MaxAge": {
          "$ref": "#/definitions/SamString"
        }
      },
      "required": [
        "AllowOrigin"
      ]
    },
    "SamJson": {
      "title": "SamJson"
    },
    "DefinitionUriItem": {
      "title": "DefinitionUriItem",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/CfnString1"
        },
        "Key": {
          "$ref": "#/definitions/CfnString1"
        },
        "Version": {
          "title": "Version",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        }
      },
      "required": [
        "Bucket",
        "Key"
      ]
    },
    "MutualTlsAuthentication": {
      "title": "MutualTlsAuthentication",
      "type": "object",
      "properties": {
        "TruststoreUri": {
          "$ref": "#/definitions/CfnString"
        },
        "TruststoreVersion": {
          "$ref": "#/definitions/CfnString"
        }
      }
    },
    "Route53": {
      "title": "Route53",
      "type": "object",
      "properties": {
        "DistributionDomainName": {
          "$ref": "#/definitions/CfnString"
        },
        "EvaluateTargetHealth": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "HostedZoneId": {
          "$ref": "#/definitions/CfnString"
        },
        "HostedZoneName": {
          "$ref": "#/definitions/CfnString"
        },
        "IpV6": {
          "$ref": "#/definitions/SamBoolean"
        }
      }
    },
    "Domain": {
      "title": "Domain",
      "type": "object",
      "properties": {
        "BasePath": {
          "$ref": "#/definitions/SamStringList"
        },
        "CertificateArn": {
          "$ref": "#/definitions/CfnString1"
        },
        "DomainName": {
          "$ref": "#/definitions/CfnString1"
        },
        "EndpointConfiguration": {
          "$ref": "#/definitions/SamString"
        },
        "MutualTlsAuthentication": {
          "$ref": "#/definitions/MutualTlsAuthentication"
        },
        "OwnershipVerificationCertificateArn": {
          "$ref": "#/definitions/CfnString"
        },
        "Route53": {
          "$ref": "#/definitions/Route53"
        },
        "SecurityPolicy": {
          "$ref": "#/definitions/CfnString"
        }
      },
      "required": [
        "CertificateArn",
        "DomainName"
      ]
    },
    "EndpointConfiguration": {
      "title": "EndpointConfiguration",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/CfnString"
        },
        "VPCEndpointIds": {
          "$ref": "#/definitions/CfnStringList"
        }
      }
    },
    "Properties2": {
      "title": "Properties2",
      "type": "object",
      "properties": {
        "AccessLogSetting": {
          "$ref": "#/definitions/AccessLogSetting"
        },
        "ApiKeySourceType": {
          "$ref": "#/definitions/CfnString"
        },
        "Auth": {
          "$ref": "#/definitions/Auth1"
        },
        "BinaryMediaTypes": {
          "$ref": "#/definitions/CfnStringList"
        },
        "CacheClusterEnabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "CacheClusterSize": {
          "$ref": "#/definitions/CfnString"
        },
        "CanarySetting": {
          "$ref": "#/definitions/CanarySetting"
        },
        "Cors": {
          "title": "Cors",
          "anyOf": [
            {
              "$ref": "#/definitions/Cor"
            },
            {
              "type": "string"
            }
          ]
        },
        "DefinitionBody": {
          "$ref": "#/definitions/SamJson"
        },
        "DefinitionUri": {
          "title": "Definitionuri",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "$ref": "#/definitions/DefinitionUriItem"
            },
            {
              "type": "string"
            }
          ]
        },
        "Description": {
          "$ref": "#/definitions/CfnString"
        },
        "DisableExecuteApiEndpoint": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "Domain": {
          "$ref": "#/definitions/Domain"
        },
        "EndpointConfiguration": {
          "$ref": "#/definitions/EndpointConfiguration"
        },
        "FailOnWarnings": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "GatewayResponses": {
          "$ref": "#/definitions/SamJson"
        },
        "MethodSettings": {
          "title": "Methodsettings"
        },
        "MinimumCompressionSize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Mode": {
          "$ref": "#/definitions/CfnString"
        },
        "Models": {
          "$ref": "#/definitions/SamJson"
        },
        "Name": {
          "$ref": "#/definitions/CfnString"
        },
        "OpenApiVersion": {
          "title": "Openapiversion",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "StageName": {
          "$ref": "#/definitions/SamString1"
        },
        "Tags": {
          "title": "Tags",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SamString1"
          }
        },
        "TracingEnabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "Variables": {
          "title": "Variables",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SamString1"
          }
        }
      },
      "required": [
        "StageName"
      ]
    },
    "Type2": {
      "title": "Type2",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::Api"
      ]
    },
    "AwsServerlessApi": {
      "title": "AwsServerlessApi",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties2"
        },
        "Type": {
          "$ref": "#/definitions/Type2"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "LocationItem": {
      "title": "LocationItem",
      "type": "object",
      "properties": {
        "ApplicationId": {
          "$ref": "#/definitions/SamString1"
        },
        "SemanticVersion": {
          "$ref": "#/definitions/SamString1"
        }
      },
      "required": [
        "ApplicationId",
        "SemanticVersion"
      ]
    },
    "CfnStringMap": {
      "title": "CfnStringMap",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SamString1"
          }
        }
      ]
    },
    "Properties3": {
      "title": "Properties3",
      "type": "object",
      "properties": {
        "Location": {
          "title": "Location",
          "anyOf": [
            {
              "$ref": "#/definitions/LocationItem"
            },
            {
              "type": "string"
            }
          ]
        },
        "NotificationARNs": {
          "$ref": "#/definitions/CfnStringList"
        },
        "Parameters": {
          "$ref": "#/definitions/CfnStringMap"
        },
        "Tags": {
          "title": "Tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TimeoutInMinutes": {
          "$ref": "#/definitions/CfnInteger"
        }
      },
      "required": [
        "Location"
      ]
    },
    "Type3": {
      "title": "Type3",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::Application"
      ]
    },
    "AwsServerlessApplication": {
      "title": "AwsServerlessApplication",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties3"
        },
        "Type": {
          "$ref": "#/definitions/Type3"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "FunctionCode": {
      "title": "FunctionCode",
      "type": "object",
      "properties": {
        "Bucket": {
          "title": "Bucket",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "Key": {
          "title": "Key",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "Version": {
          "title": "Version",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "Bucket",
        "Key"
      ]
    },
    "DeadLetterQueue1": {
      "title": "DeadLetterQueue1",
      "type": "object",
      "properties": {
        "TargetArn": {
          "$ref": "#/definitions/CfnString1"
        },
        "Type": {
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "TargetArn",
        "Type"
      ]
    },
    "DeadLetterQueue": {
      "title": "DeadLetterQueue",
      "$ref": "#/definitions/DeadLetterQueue1"
    },
    "Hooks": {
      "title": "Hooks",
      "type": "object",
      "properties": {
        "PostTraffic": {
          "title": "Posttraffic",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "PreTraffic": {
          "title": "Pretraffic",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "DeploymentPreference1": {
      "title": "DeploymentPreference1",
      "type": "object",
      "properties": {
        "Alarms": {
          "title": "Alarms",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Ref"
                  },
                  {
                    "$ref": "#/definitions/FnJoin"
                  },
                  {
                    "$ref": "#/definitions/FnSub"
                  },
                  {
                    "$ref": "#/definitions/FnGetAtt"
                  },
                  {
                    "$ref": "#/definitions/FnIf"
                  },
                  {
                    "$ref": "#/definitions/FnFindInMap"
                  },
                  {
                    "$ref": "#/definitions/FnSelect"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        "Enabled": {
          "title": "Enabled",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "Hooks": {
          "$ref": "#/definitions/Hooks"
        },
        "PassthroughCondition": {
          "title": "Passthroughcondition",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "Role": {
          "title": "Role",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "TriggerConfigurations": {
          "title": "Triggerconfigurations"
        },
        "Type": {
          "title": "Type",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "DeploymentPreference": {
      "title": "DeploymentPreference",
      "$ref": "#/definitions/DeploymentPreference1"
    },
    "Environment": {
      "title": "Environment",
      "type": "object",
      "properties": {
        "Variables": {
          "title": "Variables",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CfnString1"
          }
        }
      },
      "required": [
        "Variables"
      ]
    },
    "ResourcePolicy": {
      "title": "ResourcePolicy",
      "type": "object",
      "properties": {
        "AwsAccountBlacklist": {
          "title": "Awsaccountblacklist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AwsAccountWhitelist": {
          "$ref": "#/definitions/CfnStringList"
        },
        "CustomStatements": {
          "title": "Customstatements",
          "type": "array",
          "items": {}
        },
        "IntrinsicVpcBlacklist": {
          "title": "Intrinsicvpcblacklist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IntrinsicVpcWhitelist": {
          "title": "Intrinsicvpcwhitelist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IntrinsicVpceBlacklist": {
          "title": "Intrinsicvpceblacklist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IntrinsicVpceWhitelist": {
          "title": "Intrinsicvpcewhitelist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IpRangeBlacklist": {
          "title": "Iprangeblacklist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IpRangeWhitelist": {
          "title": "Iprangewhitelist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SourceVpcBlacklist": {
          "title": "Sourcevpcblacklist",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SourceVpcWhitelist": {
          "title": "Sourcevpcwhitelist",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Auth": {
      "title": "Auth",
      "type": "object",
      "properties": {
        "ApiKeyRequired": {
          "title": "Apikeyrequired",
          "type": "boolean"
        },
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Authorizer": {
          "title": "Authorizer",
          "type": "string"
        },
        "InvokeRole": {
          "title": "Invokerole",
          "type": "string"
        },
        "ResourcePolicy": {
          "$ref": "#/definitions/ResourcePolicy"
        }
      }
    },
    "RequestModel": {
      "title": "RequestModel",
      "type": "object",
      "properties": {
        "Model": {
          "title": "Model",
          "type": "string"
        },
        "Required": {
          "title": "Required",
          "type": "boolean"
        },
        "ValidateBody": {
          "title": "Validatebody",
          "type": "boolean"
        },
        "ValidateParameters": {
          "title": "Validateparameters",
          "type": "boolean"
        }
      },
      "required": [
        "Model"
      ]
    },
    "RequestParameters": {
      "title": "RequestParameters",
      "type": "object",
      "properties": {
        "Caching": {
          "title": "Caching",
          "type": "boolean"
        },
        "Required": {
          "title": "Required",
          "type": "boolean"
        }
      }
    },
    "Properties1": {
      "title": "Properties1",
      "type": "object",
      "properties": {
        "Auth": {
          "$ref": "#/definitions/Auth"
        },
        "Method": {
          "title": "Method",
          "type": "string"
        },
        "Path": {
          "title": "Path",
          "type": "string"
        },
        "RequestModel": {
          "$ref": "#/definitions/RequestModel"
        },
        "RequestParameters": {
          "title": "Requestparameters",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/RequestParameters"
                }
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "RestApiId": {
          "$ref": "#/definitions/CfnString"
        }
      },
      "required": [
        "Method",
        "Path"
      ]
    },
    "Type1": {
      "title": "Type1",
      "description": "An enumeration.",
      "enum": [
        "Api"
      ]
    },
    "ApiEvent": {
      "title": "ApiEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties1"
        },
        "Type": {
          "$ref": "#/definitions/Type1"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "S3Key": {
      "title": "S3Key",
      "type": "object",
      "properties": {
        "Rules": {
          "title": "Rules"
        }
      }
    },
    "FilterItem": {
      "title": "FilterItem",
      "type": "object",
      "properties": {
        "S3Key": {
          "$ref": "#/definitions/S3Key"
        }
      },
      "required": [
        "S3Key"
      ]
    },
    "Properties19": {
      "title": "Properties19",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/CfnString1"
        },
        "Events": {
          "title": "Events",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CfnString1"
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "Filter": {
          "title": "Filter",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "$ref": "#/definitions/FilterItem"
            }
          ]
        }
      },
      "required": [
        "Bucket",
        "Events"
      ]
    },
    "Type19": {
      "title": "Type19",
      "description": "An enumeration.",
      "enum": [
        "S3"
      ]
    },
    "S3Event": {
      "title": "S3Event",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties19"
        },
        "Type": {
          "$ref": "#/definitions/Type19"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "CfnJson": {
      "title": "CfnJson"
    },
    "SqsSubscriptionItem": {
      "title": "SqsSubscriptionItem",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "QueueArn": {
          "$ref": "#/definitions/CfnString1"
        },
        "QueuePolicyLogicalId": {
          "title": "Queuepolicylogicalid",
          "type": "string"
        },
        "QueueUrl": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "QueueArn",
        "QueueUrl"
      ]
    },
    "Properties22": {
      "title": "Properties22",
      "type": "object",
      "properties": {
        "FilterPolicy": {
          "$ref": "#/definitions/CfnJson"
        },
        "Region": {
          "$ref": "#/definitions/CfnString"
        },
        "SqsSubscription": {
          "title": "Sqssubscription",
          "anyOf": [
            {
              "$ref": "#/definitions/SqsSubscriptionItem"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "Topic": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Topic"
      ]
    },
    "Type22": {
      "title": "Type22",
      "description": "An enumeration.",
      "enum": [
        "SNS"
      ]
    },
    "SnsEvent": {
      "title": "SnsEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties22"
        },
        "Type": {
          "$ref": "#/definitions/Type22"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "OnFailure": {
      "title": "OnFailure",
      "type": "object",
      "properties": {
        "Destination": {
          "$ref": "#/definitions/CfnString1"
        },
        "Type": {
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "Destination"
      ]
    },
    "DestinationConfig": {
      "title": "DestinationConfig",
      "type": "object",
      "properties": {
        "OnFailure": {
          "$ref": "#/definitions/OnFailure"
        }
      },
      "required": [
        "OnFailure"
      ]
    },
    "Filter": {
      "title": "Filter",
      "type": "object",
      "properties": {
        "Pattern": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Pattern"
      ]
    },
    "FilterCriteria1": {
      "title": "FilterCriteria1",
      "type": "object",
      "properties": {
        "Filters": {
          "title": "Filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        }
      },
      "required": [
        "Filters"
      ]
    },
    "FilterCriteria": {
      "title": "FilterCriteria",
      "$ref": "#/definitions/FilterCriteria1"
    },
    "Properties16": {
      "title": "Properties16",
      "type": "object",
      "properties": {
        "BatchSize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "BisectBatchOnFunctionError": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "DestinationConfig": {
          "$ref": "#/definitions/DestinationConfig"
        },
        "Enabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "FilterCriteria": {
          "$ref": "#/definitions/FilterCriteria"
        },
        "FunctionResponseTypes": {
          "$ref": "#/definitions/CfnStringList"
        },
        "MaximumBatchingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "MaximumRecordAgeInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "MaximumRetryAttempts": {
          "$ref": "#/definitions/CfnInteger"
        },
        "ParallelizationFactor": {
          "$ref": "#/definitions/CfnInteger"
        },
        "StartingPosition": {
          "$ref": "#/definitions/CfnString1"
        },
        "Stream": {
          "$ref": "#/definitions/CfnString1"
        },
        "TumblingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        }
      },
      "required": [
        "StartingPosition",
        "Stream"
      ]
    },
    "Type16": {
      "title": "Type16",
      "description": "An enumeration.",
      "enum": [
        "Kinesis"
      ]
    },
    "KinesisEvent": {
      "title": "KinesisEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties16"
        },
        "Type": {
          "$ref": "#/definitions/Type16"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "DestinationConfig1": {
      "title": "DestinationConfig1",
      "$ref": "#/definitions/DestinationConfig"
    },
    "Properties12": {
      "title": "Properties12",
      "type": "object",
      "properties": {
        "BatchSize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "BisectBatchOnFunctionError": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "DestinationConfig": {
          "$ref": "#/definitions/DestinationConfig1"
        },
        "Enabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "FilterCriteria": {
          "title": "Filtercriteria",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "$ref": "#/definitions/FilterCriteria1"
            }
          ]
        },
        "FunctionResponseTypes": {
          "$ref": "#/definitions/CfnStringList"
        },
        "MaximumBatchingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "MaximumRecordAgeInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "MaximumRetryAttempts": {
          "$ref": "#/definitions/CfnInteger"
        },
        "ParallelizationFactor": {
          "$ref": "#/definitions/CfnInteger"
        },
        "StartingPosition": {
          "$ref": "#/definitions/CfnString1"
        },
        "Stream": {
          "$ref": "#/definitions/CfnString1"
        },
        "TumblingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        }
      },
      "required": [
        "StartingPosition",
        "Stream"
      ]
    },
    "Type12": {
      "title": "Type12",
      "description": "An enumeration.",
      "enum": [
        "DynamoDB"
      ]
    },
    "DynamoDbEvent": {
      "title": "DynamoDbEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties12"
        },
        "Type": {
          "$ref": "#/definitions/Type12"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Properties23": {
      "title": "Properties23",
      "type": "object",
      "properties": {
        "BatchSize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Enabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "FilterCriteria": {
          "$ref": "#/definitions/FilterCriteria"
        },
        "MaximumBatchingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Queue": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Queue"
      ]
    },
    "Type23": {
      "title": "Type23",
      "description": "An enumeration.",
      "enum": [
        "SQS"
      ]
    },
    "SqsEvent": {
      "title": "SqsEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties23"
        },
        "Type": {
          "$ref": "#/definitions/Type23"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "EventsRuleRetryPolicy1": {
      "title": "EventsRuleRetryPolicy1",
      "type": "object",
      "properties": {
        "MaximumEventAgeInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "MaximumRetryAttempts": {
          "$ref": "#/definitions/CfnInteger"
        }
      }
    },
    "EventsRuleRetryPolicy": {
      "title": "EventsRuleRetryPolicy",
      "$ref": "#/definitions/EventsRuleRetryPolicy1"
    },
    "Properties20": {
      "title": "Properties20",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "title": "Deadletterconfig"
        },
        "Description": {
          "$ref": "#/definitions/CfnString"
        },
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "Input": {
          "$ref": "#/definitions/CfnString"
        },
        "Name": {
          "$ref": "#/definitions/CfnString"
        },
        "RetryPolicy": {
          "$ref": "#/definitions/EventsRuleRetryPolicy"
        },
        "Schedule": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Schedule"
      ]
    },
    "Type20": {
      "title": "Type20",
      "description": "An enumeration.",
      "enum": [
        "Schedule"
      ]
    },
    "ScheduleEvent": {
      "title": "ScheduleEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties20"
        },
        "Type": {
          "$ref": "#/definitions/Type20"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Properties9": {
      "title": "Properties9",
      "type": "object",
      "properties": {
        "EventBusName": {
          "$ref": "#/definitions/CfnString"
        },
        "Input": {
          "$ref": "#/definitions/CfnString"
        },
        "InputPath": {
          "$ref": "#/definitions/CfnString"
        },
        "Pattern": {
          "$ref": "#/definitions/CfnJson"
        }
      },
      "required": [
        "Pattern"
      ]
    },
    "Type9": {
      "title": "Type9",
      "description": "An enumeration.",
      "enum": [
        "CloudWatchEvent"
      ]
    },
    "CloudWatchEvent": {
      "title": "CloudWatchEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties9"
        },
        "Type": {
          "$ref": "#/definitions/Type9"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Target": {
      "title": "Target",
      "type": "object",
      "properties": {
        "Id": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Id"
      ]
    },
    "Properties13": {
      "title": "Properties13",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "title": "Deadletterconfig"
        },
        "EventBusName": {
          "$ref": "#/definitions/CfnString"
        },
        "Input": {
          "$ref": "#/definitions/CfnString"
        },
        "InputPath": {
          "$ref": "#/definitions/CfnString"
        },
        "Pattern": {
          "$ref": "#/definitions/CfnJson"
        },
        "RetryPolicy": {
          "$ref": "#/definitions/EventsRuleRetryPolicy"
        },
        "Target": {
          "$ref": "#/definitions/Target"
        }
      },
      "required": [
        "Pattern"
      ]
    },
    "Type13": {
      "title": "Type13",
      "description": "An enumeration.",
      "enum": [
        "EventBridgeRule"
      ]
    },
    "EventBridgeRuleEvent": {
      "title": "EventBridgeRuleEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties13"
        },
        "Type": {
          "$ref": "#/definitions/Type13"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Properties10": {
      "title": "Properties10",
      "type": "object",
      "properties": {
        "FilterPattern": {
          "$ref": "#/definitions/CfnString1"
        },
        "LogGroupName": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "FilterPattern",
        "LogGroupName"
      ]
    },
    "Type10": {
      "title": "Type10",
      "description": "An enumeration.",
      "enum": [
        "CloudWatchLogs"
      ]
    },
    "CloudWatchLogsEvent": {
      "title": "CloudWatchLogsEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties10"
        },
        "Type": {
          "$ref": "#/definitions/Type10"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Properties15": {
      "title": "Properties15",
      "type": "object",
      "properties": {
        "AwsIotSqlVersion": {
          "$ref": "#/definitions/CfnString"
        },
        "Sql": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Sql"
      ]
    },
    "Type15": {
      "title": "Type15",
      "description": "An enumeration.",
      "enum": [
        "IoTRule"
      ]
    },
    "IotRuleEvent": {
      "title": "IotRuleEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties15"
        },
        "Type": {
          "$ref": "#/definitions/Type15"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "SkillId": {
          "title": "Skillid",
          "type": "string"
        }
      }
    },
    "Type": {
      "title": "Type",
      "description": "An enumeration.",
      "enum": [
        "AlexaSkill"
      ]
    },
    "AlexaSkillEvent": {
      "title": "AlexaSkillEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties"
        },
        "Type": {
          "$ref": "#/definitions/Type"
        }
      },
      "required": [
        "Type"
      ]
    },
    "CognitoUserPoolLambdaConfig": {
      "title": "CognitoUserPoolLambdaConfig"
    },
    "Properties11": {
      "title": "Properties11",
      "type": "object",
      "properties": {
        "Trigger": {
          "$ref": "#/definitions/CognitoUserPoolLambdaConfig"
        },
        "UserPool": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Trigger",
        "UserPool"
      ]
    },
    "Type11": {
      "title": "Type11",
      "description": "An enumeration.",
      "enum": [
        "Cognito"
      ]
    },
    "CognitoEvent": {
      "title": "CognitoEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties11"
        },
        "Type": {
          "$ref": "#/definitions/Type11"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Auth2": {
      "title": "Auth2",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Authorizer": {
          "title": "Authorizer",
          "type": "string"
        }
      }
    },
    "Properties14": {
      "title": "Properties14",
      "type": "object",
      "properties": {
        "ApiId": {
          "$ref": "#/definitions/CfnString"
        },
        "Auth": {
          "$ref": "#/definitions/Auth2"
        },
        "Method": {
          "title": "Method",
          "type": "string"
        },
        "Path": {
          "title": "Path",
          "type": "string"
        },
        "PayloadFormatVersion": {
          "$ref": "#/definitions/CfnString"
        },
        "RouteSettings": {
          "$ref": "#/definitions/CfnJson"
        },
        "TimeoutInMillis": {
          "$ref": "#/definitions/CfnInteger"
        }
      }
    },
    "Type14": {
      "title": "Type14",
      "description": "An enumeration.",
      "enum": [
        "HttpApi"
      ]
    },
    "HttpApiEvent": {
      "title": "HttpApiEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties14"
        },
        "Type": {
          "$ref": "#/definitions/Type14"
        }
      },
      "required": [
        "Type"
      ]
    },
    "CfnStringList1": {
      "title": "CfnStringList1",
      "description": "A CloudFormation list of strings with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CfnString1"
          }
        }
      ]
    },
    "Properties18": {
      "title": "Properties18",
      "type": "object",
      "properties": {
        "ConsumerGroupId": {
          "$ref": "#/definitions/CfnString"
        },
        "MaximumBatchingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "StartingPosition": {
          "$ref": "#/definitions/CfnString1"
        },
        "Stream": {
          "$ref": "#/definitions/CfnString1"
        },
        "Topics": {
          "$ref": "#/definitions/CfnStringList1"
        }
      },
      "required": [
        "StartingPosition",
        "Stream",
        "Topics"
      ]
    },
    "Type18": {
      "title": "Type18",
      "description": "An enumeration.",
      "enum": [
        "MSK"
      ]
    },
    "MskEvent": {
      "title": "MskEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties18"
        },
        "Type": {
          "$ref": "#/definitions/Type18"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "SourceAccessConfiguration": {
      "title": "SourceAccessConfiguration",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/CfnString"
        },
        "URI": {
          "$ref": "#/definitions/CfnString"
        }
      }
    },
    "Properties17": {
      "title": "Properties17",
      "type": "object",
      "properties": {
        "BatchSize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Broker": {
          "$ref": "#/definitions/CfnString1"
        },
        "Enabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "MaximumBatchingWindowInSeconds": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Queues": {
          "$ref": "#/definitions/CfnStringList1"
        },
        "SecretsManagerKmsKeyId": {
          "title": "Secretsmanagerkmskeyid",
          "type": "string"
        },
        "SourceAccessConfigurations": {
          "title": "Sourceaccessconfigurations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceAccessConfiguration"
          }
        }
      },
      "required": [
        "Broker",
        "Queues",
        "SourceAccessConfigurations"
      ]
    },
    "Type17": {
      "title": "Type17",
      "description": "An enumeration.",
      "enum": [
        "MQ"
      ]
    },
    "MqEvent": {
      "title": "MqEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties17"
        },
        "Type": {
          "$ref": "#/definitions/Type17"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "Properties21": {
      "title": "Properties21",
      "type": "object",
      "properties": {
        "BatchSize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "ConsumerGroupId": {
          "$ref": "#/definitions/CfnString"
        },
        "Enabled": {
          "$ref": "#/definitions/CfnBoolean"
        },
        "KafkaBootstrapServers": {
          "$ref": "#/definitions/CfnStringList"
        },
        "SourceAccessConfigurations": {
          "title": "Sourceaccessconfigurations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceAccessConfiguration"
          }
        },
        "Topics": {
          "$ref": "#/definitions/CfnStringList1"
        }
      },
      "required": [
        "SourceAccessConfigurations",
        "Topics"
      ]
    },
    "Type21": {
      "title": "Type21",
      "description": "An enumeration.",
      "enum": [
        "SelfManagedKafka"
      ]
    },
    "SelfManagedKafkaEvent": {
      "title": "SelfManagedKafkaEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties21"
        },
        "Type": {
          "$ref": "#/definitions/Type21"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "FileSystemConfig": {
      "title": "FileSystemConfig",
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/CfnString1"
        },
        "LocalMountPath": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Arn",
        "LocalMountPath"
      ]
    },
    "FunctionUrlConfig1": {
      "title": "FunctionUrlConfig1",
      "type": "object",
      "properties": {
        "AuthType": {
          "$ref": "#/definitions/CfnString1"
        },
        "Cors": {
          "title": "Cors"
        }
      },
      "required": [
        "AuthType"
      ]
    },
    "FunctionUrlConfig": {
      "title": "FunctionUrlConfig",
      "$ref": "#/definitions/FunctionUrlConfig1"
    },
    "VpcConfig1": {
      "title": "VpcConfig1",
      "type": "object",
      "properties": {
        "SecurityGroupIds": {
          "$ref": "#/definitions/CfnStringList"
        },
        "SubnetIds": {
          "$ref": "#/definitions/CfnStringList"
        }
      }
    },
    "VpcConfig": {
      "title": "VpcConfig",
      "$ref": "#/definitions/VpcConfig1"
    },
    "Properties4": {
      "title": "Properties4",
      "type": "object",
      "properties": {
        "Architectures": {
          "$ref": "#/definitions/CfnStringList"
        },
        "AssumeRolePolicyDocument": {
          "title": "Assumerolepolicydocument"
        },
        "AutoPublishAlias": {
          "title": "Autopublishalias",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "AutoPublishCodeSha256": {
          "title": "Autopublishcodesha256",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "CodeSigningConfigArn": {
          "$ref": "#/definitions/CfnStringList"
        },
        "CodeUri": {
          "title": "Codeuri",
          "anyOf": [
            {
              "$ref": "#/definitions/FunctionCode"
            },
            {
              "type": "string"
            }
          ]
        },
        "DeadLetterQueue": {
          "$ref": "#/definitions/DeadLetterQueue"
        },
        "DeploymentPreference": {
          "$ref": "#/definitions/DeploymentPreference"
        },
        "Description": {
          "$ref": "#/definitions/CfnString"
        },
        "Environment": {
          "$ref": "#/definitions/Environment"
        },
        "EphemeralStorage": {
          "title": "Ephemeralstorage"
        },
        "EventInvokeConfig": {
          "title": "Eventinvokeconfig"
        },
        "Events": {
          "title": "Events",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/ApiEvent"
              },
              {
                "$ref": "#/definitions/S3Event"
              },
              {
                "$ref": "#/definitions/SnsEvent"
              },
              {
                "$ref": "#/definitions/KinesisEvent"
              },
              {
                "$ref": "#/definitions/DynamoDbEvent"
              },
              {
                "$ref": "#/definitions/SqsEvent"
              },
              {
                "$ref": "#/definitions/ScheduleEvent"
              },
              {
                "$ref": "#/definitions/CloudWatchEvent"
              },
              {
                "$ref": "#/definitions/EventBridgeRuleEvent"
              },
              {
                "$ref": "#/definitions/CloudWatchLogsEvent"
              },
              {
                "$ref": "#/definitions/IotRuleEvent"
              },
              {
                "$ref": "#/definitions/AlexaSkillEvent"
              },
              {
                "$ref": "#/definitions/CognitoEvent"
              },
              {
                "$ref": "#/definitions/HttpApiEvent"
              },
              {
                "$ref": "#/definitions/MskEvent"
              },
              {
                "$ref": "#/definitions/MqEvent"
              },
              {
                "$ref": "#/definitions/SelfManagedKafkaEvent"
              }
            ]
          }
        },
        "FileSystemConfigs": {
          "title": "Filesystemconfigs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileSystemConfig"
          }
        },
        "FunctionName": {
          "$ref": "#/definitions/CfnString"
        },
        "FunctionUrlConfig": {
          "$ref": "#/definitions/FunctionUrlConfig"
        },
        "Handler": {
          "$ref": "#/definitions/CfnString"
        },
        "ImageConfig": {
          "title": "Imageconfig"
        },
        "ImageUri": {
          "$ref": "#/definitions/CfnString"
        },
        "InlineCode": {
          "$ref": "#/definitions/CfnString"
        },
        "KmsKeyArn": {
          "$ref": "#/definitions/CfnString"
        },
        "Layers": {
          "$ref": "#/definitions/CfnStringList"
        },
        "MemorySize": {
          "$ref": "#/definitions/CfnInteger"
        },
        "PackageType": {
          "$ref": "#/definitions/CfnString"
        },
        "PermissionsBoundary": {
          "$ref": "#/definitions/CfnString"
        },
        "Policies": {
          "title": "Policies"
        },
        "ProvisionedConcurrencyConfig": {
          "title": "Provisionedconcurrencyconfig"
        },
        "ReservedConcurrentExecutions": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Role": {
          "$ref": "#/definitions/CfnString"
        },
        "Runtime": {
          "$ref": "#/definitions/CfnString"
        },
        "Tags": {
          "title": "Tags",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CfnString1"
          }
        },
        "Timeout": {
          "$ref": "#/definitions/CfnInteger"
        },
        "Tracing": {
          "title": "Tracing",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            }
          ]
        },
        "VersionDescription": {
          "title": "Versiondescription",
          "type": "string"
        },
        "VpcConfig": {
          "$ref": "#/definitions/VpcConfig"
        }
      }
    },
    "Type4": {
      "title": "Type4",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::Function"
      ]
    },
    "AwsServerlessFunction": {
      "title": "AwsServerlessFunction",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties4"
        },
        "Type": {
          "$ref": "#/definitions/Type4"
        }
      },
      "required": [
        "Type"
      ]
    },
    "Properties5": {
      "title": "Properties5",
      "type": "object",
      "properties": {
        "AccessLogSettings": {
          "title": "Accesslogsettings"
        },
        "Auth": {
          "title": "Auth"
        },
        "CorsConfiguration": {
          "title": "Corsconfiguration"
        },
        "DefaultRouteSettings": {
          "title": "Defaultroutesettings"
        },
        "DefinitionBody": {
          "title": "Definitionbody"
        },
        "DefinitionUri": {
          "title": "Definitionuri"
        },
        "Description": {
          "title": "Description"
        },
        "DisableExecuteApiEndpoint": {
          "title": "Disableexecuteapiendpoint"
        },
        "Domain": {
          "title": "Domain"
        },
        "FailOnWarnings": {
          "title": "Failonwarnings"
        },
        "RouteSettings": {
          "title": "Routesettings"
        },
        "StageName": {
          "title": "Stagename"
        },
        "StageVariables": {
          "title": "Stagevariables"
        },
        "Tags": {
          "title": "Tags"
        }
      }
    },
    "Type5": {
      "title": "Type5",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::HttpApi"
      ]
    },
    "AwsServerlessHttpApi": {
      "title": "AwsServerlessHttpApi",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties5"
        },
        "Type": {
          "$ref": "#/definitions/Type5"
        }
      },
      "required": [
        "Type"
      ]
    },
    "ContentUriItem": {
      "title": "ContentUriItem",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/CfnString1"
        },
        "Key": {
          "$ref": "#/definitions/CfnString1"
        },
        "Version": {
          "$ref": "#/definitions/CfnString"
        }
      },
      "required": [
        "Bucket",
        "Key"
      ]
    },
    "Properties6": {
      "title": "Properties6",
      "type": "object",
      "properties": {
        "CompatibleArchitectures": {
          "$ref": "#/definitions/CfnStringList"
        },
        "CompatibleRuntimes": {
          "$ref": "#/definitions/CfnStringList"
        },
        "ContentUri": {
          "title": "Contenturi",
          "anyOf": [
            {
              "$ref": "#/definitions/ContentUriItem"
            },
            {
              "type": "string"
            }
          ]
        },
        "Description": {
          "$ref": "#/definitions/CfnString"
        },
        "LayerName": {
          "$ref": "#/definitions/CfnString"
        },
        "LicenseInfo": {
          "$ref": "#/definitions/CfnString"
        },
        "RetentionPolicy": {
          "$ref": "#/definitions/CfnString"
        }
      },
      "required": [
        "ContentUri"
      ]
    },
    "Type6": {
      "title": "Type6",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::LayerVersion"
      ]
    },
    "AwsServerlessLayerVersion": {
      "title": "AwsServerlessLayerVersion",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties6"
        },
        "Type": {
          "$ref": "#/definitions/Type6"
        }
      },
      "required": [
        "Properties",
        "Type"
      ]
    },
    "PrimaryKey": {
      "title": "PrimaryKey",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/CfnString1"
        },
        "Type": {
          "$ref": "#/definitions/CfnString1"
        }
      },
      "required": [
        "Name",
        "Type"
      ]
    },
    "CfnInteger1": {
      "title": "CfnInteger1",
      "description": "A CloudFormation integer with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "number"
        }
      ]
    },
    "ProvisionedThroughput": {
      "title": "ProvisionedThroughput",
      "type": "object",
      "properties": {
        "ReadCapacityUnits": {
          "$ref": "#/definitions/CfnInteger1"
        },
        "WriteCapacityUnits": {
          "$ref": "#/definitions/CfnInteger1"
        }
      },
      "required": [
        "ReadCapacityUnits",
        "WriteCapacityUnits"
      ]
    },
    "CfnBoolean1": {
      "title": "CfnBoolean1",
      "description": "A CloudFormation boolean with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "SSESpecification": {
      "title": "SSESpecification",
      "type": "object",
      "properties": {
        "KMSMasterKeyId": {
          "$ref": "#/definitions/CfnString"
        },
        "SSEEnabled": {
          "$ref": "#/definitions/CfnBoolean1"
        },
        "SSEType": {
          "$ref": "#/definitions/CfnString"
        }
      },
      "required": [
        "SSEEnabled"
      ]
    },
    "Properties7": {
      "title": "Properties7",
      "type": "object",
      "properties": {
        "PrimaryKey": {
          "$ref": "#/definitions/PrimaryKey"
        },
        "ProvisionedThroughput": {
          "$ref": "#/definitions/ProvisionedThroughput"
        },
        "SSESpecification": {
          "$ref": "#/definitions/SSESpecification"
        },
        "TableName": {
          "$ref": "#/definitions/CfnString"
        },
        "Tags": {
          "title": "Tags",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CfnString1"
          }
        }
      }
    },
    "Type7": {
      "title": "Type7",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::SimpleTable"
      ]
    },
    "AwsServerlessSimpleTable": {
      "title": "AwsServerlessSimpleTable",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties7"
        },
        "Type": {
          "$ref": "#/definitions/Type7"
        }
      },
      "required": [
        "Type"
      ]
    },
    "DefinitionUriItem1": {
      "title": "DefinitionUriItem1",
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/CfnString1"
        },
        "Key": {
          "$ref": "#/definitions/CfnString1"
        },
        "Version": {
          "title": "Version",
          "anyOf": [
            {
              "$ref": "#/definitions/Ref"
            },
            {
              "$ref": "#/definitions/FnJoin"
            },
            {
              "$ref": "#/definitions/FnSub"
            },
            {
              "$ref": "#/definitions/FnGetAtt"
            },
            {
              "$ref": "#/definitions/FnIf"
            },
            {
              "$ref": "#/definitions/FnFindInMap"
            },
            {
              "$ref": "#/definitions/FnSelect"
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        }
      },
      "required": [
        "Bucket",
        "Key"
      ]
    },
    "SamBoolean1": {
      "title": "SamBoolean1",
      "description": "A CloudFormation boolean with full intrinsics support.",
      "anyOf": [
        {
          "$ref": "#/definitions/Ref"
        },
        {
          "$ref": "#/definitions/FnJoin"
        },
        {
          "$ref": "#/definitions/FnSub"
        },
        {
          "$ref": "#/definitions/FnGetAtt"
        },
        {
          "$ref": "#/definitions/FnIf"
        },
        {
          "$ref": "#/definitions/FnFindInMap"
        },
        {
          "$ref": "#/definitions/FnSelect"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "Tracing": {
      "title": "Tracing",
      "type": "object",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/SamBoolean1"
        }
      },
      "required": [
        "Enabled"
      ]
    },
    "Properties8": {
      "title": "Properties8",
      "type": "object",
      "properties": {
        "Definition": {
          "$ref": "#/definitions/SamJson"
        },
        "DefinitionSubstitutions": {
          "$ref": "#/definitions/SamJson"
        },
        "DefinitionUri": {
          "title": "Definitionuri",
          "anyOf": [
            {
              "$ref": "#/definitions/DefinitionUriItem1"
            },
            {
              "type": "string"
            }
          ]
        },
        "Events": {
          "title": "Events"
        },
        "Logging": {
          "title": "Logging"
        },
        "Name": {
          "$ref": "#/definitions/CfnString"
        },
        "PermissionsBoundary": {
          "$ref": "#/definitions/CfnString"
        },
        "Policies": {
          "title": "Policies"
        },
        "Role": {
          "$ref": "#/definitions/CfnString"
        },
        "Tags": {
          "$ref": "#/definitions/SamJson"
        },
        "Tracing": {
          "$ref": "#/definitions/Tracing"
        },
        "Type": {
          "$ref": "#/definitions/CfnString"
        }
      }
    },
    "Type8": {
      "title": "Type8",
      "description": "An enumeration.",
      "enum": [
        "AWS::Serverless::StateMachine"
      ]
    },
    "AwsServerlessStateMachine": {
      "title": "AwsServerlessStateMachine",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/Properties8"
        },
        "Type": {
          "$ref": "#/definitions/Type8"
        }
      },
      "required": [
        "Type"
      ]
    },
    "CfnResourceType": {
      "title": "CfnResourceType",
      "description": "An enumeration.",
      "enum": [
        "AWS::ACMPCA::Certificate",
        "AWS::ACMPCA::CertificateAuthority",
        "AWS::ACMPCA::CertificateAuthorityActivation",
        "AWS::ACMPCA::Permission",
        "AWS::APS::RuleGroupsNamespace",
        "AWS::APS::Workspace",
        "AWS::AccessAnalyzer::Analyzer",
        "AWS::AmazonMQ::Broker",
        "AWS::AmazonMQ::Configuration",
        "AWS::AmazonMQ::ConfigurationAssociation",
        "AWS::Amplify::App",
        "AWS::Amplify::Branch",
        "AWS::Amplify::Domain",
        "AWS::AmplifyUIBuilder::Component",
        "AWS::AmplifyUIBuilder::Theme",
        "AWS::ApiGateway::Account",
        "AWS::ApiGateway::ApiKey",
        "AWS::ApiGateway::Authorizer",
        "AWS::ApiGateway::BasePathMapping",
        "AWS::ApiGateway::ClientCertificate",
        "AWS::ApiGateway::Deployment",
        "AWS::ApiGateway::DocumentationPart",
        "AWS::ApiGateway::DocumentationVersion",
        "AWS::ApiGateway::DomainName",
        "AWS::ApiGateway::GatewayResponse",
        "AWS::ApiGateway::Method",
        "AWS::ApiGateway::Model",
        "AWS::ApiGateway::RequestValidator",
        "AWS::ApiGateway::Resource",
        "AWS::ApiGateway::RestApi",
        "AWS::ApiGateway::Stage",
        "AWS::ApiGateway::UsagePlan",
        "AWS::ApiGateway::UsagePlanKey",
        "AWS::ApiGateway::VpcLink",
        "AWS::ApiGatewayV2::Api",
        "AWS::ApiGatewayV2::ApiGatewayManagedOverrides",
        "AWS::ApiGatewayV2::ApiMapping",
        "AWS::ApiGatewayV2::Authorizer",
        "AWS::ApiGatewayV2::Deployment",
        "AWS::ApiGatewayV2::DomainName",
        "AWS::ApiGatewayV2::Integration",
        "AWS::ApiGatewayV2::IntegrationResponse",
        "AWS::ApiGatewayV2::Model",
        "AWS::ApiGatewayV2::Route",
        "AWS::ApiGatewayV2::RouteResponse",
        "AWS::ApiGatewayV2::Stage",
        "AWS::ApiGatewayV2::VpcLink",
        "AWS::AppConfig::Application",
        "AWS::AppConfig::ConfigurationProfile",
        "AWS::AppConfig::Deployment",
        "AWS::AppConfig::DeploymentStrategy",
        "AWS::AppConfig::Environment",
        "AWS::AppConfig::HostedConfigurationVersion",
        "AWS::AppFlow::ConnectorProfile",
        "AWS::AppFlow::Flow",
        "AWS::AppMesh::GatewayRoute",
        "AWS::AppMesh::Mesh",
        "AWS::AppMesh::Route",
        "AWS::AppMesh::VirtualGateway",
        "AWS::AppMesh::VirtualNode",
        "AWS::AppMesh::VirtualRouter",
        "AWS::AppMesh::VirtualService",
        "AWS::AppRunner::ObservabilityConfiguration",
        "AWS::AppRunner::Service",
        "AWS::AppRunner::VpcConnector",
        "AWS::AppStream::AppBlock",
        "AWS::AppStream::Application",
        "AWS::AppStream::ApplicationEntitlementAssociation",
        "AWS::AppStream::ApplicationFleetAssociation",
        "AWS::AppStream::DirectoryConfig",
        "AWS::AppStream::Entitlement",
        "AWS::AppStream::Fleet",
        "AWS::AppStream::ImageBuilder",
        "AWS::AppStream::Stack",
        "AWS::AppStream::StackFleetAssociation",
        "AWS::AppStream::StackUserAssociation",
        "AWS::AppStream::User",
        "AWS::AppSync::ApiCache",
        "AWS::AppSync::ApiKey",
        "AWS::AppSync::DataSource",
        "AWS::AppSync::DomainName",
        "AWS::AppSync::DomainNameApiAssociation",
        "AWS::AppSync::FunctionConfiguration",
        "AWS::AppSync::GraphQLApi",
        "AWS::AppSync::GraphQLSchema",
        "AWS::AppSync::Resolver",
        "AWS::ApplicationAutoScaling::ScalableTarget",
        "AWS::ApplicationAutoScaling::ScalingPolicy",
        "AWS::ApplicationInsights::Application",
        "AWS::Athena::DataCatalog",
        "AWS::Athena::NamedQuery",
        "AWS::Athena::PreparedStatement",
        "AWS::Athena::WorkGroup",
        "AWS::AuditManager::Assessment",
        "AWS::AutoScaling::AutoScalingGroup",
        "AWS::AutoScaling::LaunchConfiguration",
        "AWS::AutoScaling::LifecycleHook",
        "AWS::AutoScaling::ScalingPolicy",
        "AWS::AutoScaling::ScheduledAction",
        "AWS::AutoScaling::WarmPool",
        "AWS::AutoScalingPlans::ScalingPlan",
        "AWS::Backup::BackupPlan",
        "AWS::Backup::BackupSelection",
        "AWS::Backup::BackupVault",
        "AWS::Backup::Framework",
        "AWS::Backup::ReportPlan",
        "AWS::Batch::ComputeEnvironment",
        "AWS::Batch::JobDefinition",
        "AWS::Batch::JobQueue",
        "AWS::Batch::SchedulingPolicy",
        "AWS::Budgets::Budget",
        "AWS::Budgets::BudgetsAction",
        "AWS::CE::CostCategory",
        "AWS::Cassandra::Keyspace",
        "AWS::Cassandra::Table",
        "AWS::CertificateManager::Account",
        "AWS::CertificateManager::Certificate",
        "AWS::Chatbot::SlackChannelConfiguration",
        "AWS::Cloud9::EnvironmentEC2",
        "AWS::CloudFormation::CustomResource",
        "AWS::CloudFormation::HookDefaultVersion",
        "AWS::CloudFormation::HookTypeConfig",
        "AWS::CloudFormation::HookVersion",
        "AWS::CloudFormation::Macro",
        "AWS::CloudFormation::ModuleDefaultVersion",
        "AWS::CloudFormation::ModuleVersion",
        "AWS::CloudFormation::PublicTypeVersion",
        "AWS::CloudFormation::Publisher",
        "AWS::CloudFormation::ResourceDefaultVersion",
        "AWS::CloudFormation::ResourceVersion",
        "AWS::CloudFormation::Stack",
        "AWS::CloudFormation::StackSet",
        "AWS::CloudFormation::TypeActivation",
        "AWS::CloudFormation::WaitCondition",
        "AWS::CloudFormation::WaitConditionHandle",
        "AWS::CloudFront::CachePolicy",
        "AWS::CloudFront::CloudFrontOriginAccessIdentity",
        "AWS::CloudFront::Distribution",
        "AWS::CloudFront::Function",
        "AWS::CloudFront::KeyGroup",
        "AWS::CloudFront::OriginRequestPolicy",
        "AWS::CloudFront::PublicKey",
        "AWS::CloudFront::RealtimeLogConfig",
        "AWS::CloudFront::ResponseHeadersPolicy",
        "AWS::CloudFront::StreamingDistribution",
        "AWS::CloudTrail::EventDataStore",
        "AWS::CloudTrail::Trail",
        "AWS::CloudWatch::Alarm",
        "AWS::CloudWatch::AnomalyDetector",
        "AWS::CloudWatch::CompositeAlarm",
        "AWS::CloudWatch::Dashboard",
        "AWS::CloudWatch::InsightRule",
        "AWS::CloudWatch::MetricStream",
        "AWS::CodeArtifact::Domain",
        "AWS::CodeArtifact::Repository",
        "AWS::CodeBuild::Project",
        "AWS::CodeBuild::ReportGroup",
        "AWS::CodeBuild::SourceCredential",
        "AWS::CodeCommit::Repository",
        "AWS::CodeDeploy::Application",
        "AWS::CodeDeploy::DeploymentConfig",
        "AWS::CodeDeploy::DeploymentGroup",
        "AWS::CodeGuruProfiler::ProfilingGroup",
        "AWS::CodeGuruReviewer::RepositoryAssociation",
        "AWS::CodePipeline::CustomActionType",
        "AWS::CodePipeline::Pipeline",
        "AWS::CodePipeline::Webhook",
        "AWS::CodeStar::GitHubRepository",
        "AWS::CodeStarConnections::Connection",
        "AWS::CodeStarNotifications::NotificationRule",
        "AWS::Cognito::IdentityPool",
        "AWS::Cognito::IdentityPoolRoleAttachment",
        "AWS::Cognito::UserPool",
        "AWS::Cognito::UserPoolClient",
        "AWS::Cognito::UserPoolDomain",
        "AWS::Cognito::UserPoolGroup",
        "AWS::Cognito::UserPoolIdentityProvider",
        "AWS::Cognito::UserPoolResourceServer",
        "AWS::Cognito::UserPoolRiskConfigurationAttachment",
        "AWS::Cognito::UserPoolUICustomizationAttachment",
        "AWS::Cognito::UserPoolUser",
        "AWS::Cognito::UserPoolUserToGroupAttachment",
        "AWS::Config::AggregationAuthorization",
        "AWS::Config::ConfigRule",
        "AWS::Config::ConfigurationAggregator",
        "AWS::Config::ConfigurationRecorder",
        "AWS::Config::ConformancePack",
        "AWS::Config::DeliveryChannel",
        "AWS::Config::OrganizationConfigRule",
        "AWS::Config::OrganizationConformancePack",
        "AWS::Config::RemediationConfiguration",
        "AWS::Config::StoredQuery",
        "AWS::DAX::Cluster",
        "AWS::DAX::ParameterGroup",
        "AWS::DAX::SubnetGroup",
        "AWS::DLM::LifecyclePolicy",
        "AWS::DMS::Certificate",
        "AWS::DMS::Endpoint",
        "AWS::DMS::EventSubscription",
        "AWS::DMS::ReplicationInstance",
        "AWS::DMS::ReplicationSubnetGroup",
        "AWS::DMS::ReplicationTask",
        "AWS::DataBrew::Dataset",
        "AWS::DataBrew::Job",
        "AWS::DataBrew::Project",
        "AWS::DataBrew::Recipe",
        "AWS::DataBrew::Ruleset",
        "AWS::DataBrew::Schedule",
        "AWS::DataPipeline::Pipeline",
        "AWS::DataSync::Agent",
        "AWS::DataSync::LocationEFS",
        "AWS::DataSync::LocationFSxLustre",
        "AWS::DataSync::LocationFSxONTAP",
        "AWS::DataSync::LocationFSxOpenZFS",
        "AWS::DataSync::LocationFSxWindows",
        "AWS::DataSync::LocationHDFS",
        "AWS::DataSync::LocationNFS",
        "AWS::DataSync::LocationObjectStorage",
        "AWS::DataSync::LocationS3",
        "AWS::DataSync::LocationSMB",
        "AWS::DataSync::Task",
        "AWS::Detective::Graph",
        "AWS::Detective::MemberInvitation",
        "AWS::DevOpsGuru::NotificationChannel",
        "AWS::DevOpsGuru::ResourceCollection",
        "AWS::DirectoryService::MicrosoftAD",
        "AWS::DirectoryService::SimpleAD",
        "AWS::DocDB::DBCluster",
        "AWS::DocDB::DBClusterParameterGroup",
        "AWS::DocDB::DBInstance",
        "AWS::DocDB::DBSubnetGroup",
        "AWS::DynamoDB::GlobalTable",
        "AWS::DynamoDB::Table",
        "AWS::EC2::CapacityReservation",
        "AWS::EC2::CapacityReservationFleet",
        "AWS::EC2::CarrierGateway",
        "AWS::EC2::ClientVpnAuthorizationRule",
        "AWS::EC2::ClientVpnEndpoint",
        "AWS::EC2::ClientVpnRoute",
        "AWS::EC2::ClientVpnTargetNetworkAssociation",
        "AWS::EC2::CustomerGateway",
        "AWS::EC2::DHCPOptions",
        "AWS::EC2::EC2Fleet",
        "AWS::EC2::EIP",
        "AWS::EC2::EIPAssociation",
        "AWS::EC2::EgressOnlyInternetGateway",
        "AWS::EC2::EnclaveCertificateIamRoleAssociation",
        "AWS::EC2::FlowLog",
        "AWS::EC2::GatewayRouteTableAssociation",
        "AWS::EC2::Host",
        "AWS::EC2::IPAM",
        "AWS::EC2::IPAMAllocation",
        "AWS::EC2::IPAMPool",
        "AWS::EC2::IPAMScope",
        "AWS::EC2::Instance",
        "AWS::EC2::InternetGateway",
        "AWS::EC2::KeyPair",
        "AWS::EC2::LaunchTemplate",
        "AWS::EC2::LocalGatewayRoute",
        "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
        "AWS::EC2::NatGateway",
        "AWS::EC2::NetworkAcl",
        "AWS::EC2::NetworkAclEntry",
        "AWS::EC2::NetworkInsightsAccessScope",
        "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
        "AWS::EC2::NetworkInsightsAnalysis",
        "AWS::EC2::NetworkInsightsPath",
        "AWS::EC2::NetworkInterface",
        "AWS::EC2::NetworkInterfaceAttachment",
        "AWS::EC2::NetworkInterfacePermission",
        "AWS::EC2::PlacementGroup",
        "AWS::EC2::PrefixList",
        "AWS::EC2::Route",
        "AWS::EC2::RouteTable",
        "AWS::EC2::SecurityGroup",
        "AWS::EC2::SecurityGroupEgress",
        "AWS::EC2::SecurityGroupIngress",
        "AWS::EC2::SpotFleet",
        "AWS::EC2::Subnet",
        "AWS::EC2::SubnetCidrBlock",
        "AWS::EC2::SubnetNetworkAclAssociation",
        "AWS::EC2::SubnetRouteTableAssociation",
        "AWS::EC2::TrafficMirrorFilter",
        "AWS::EC2::TrafficMirrorFilterRule",
        "AWS::EC2::TrafficMirrorSession",
        "AWS::EC2::TrafficMirrorTarget",
        "AWS::EC2::TransitGateway",
        "AWS::EC2::TransitGatewayAttachment",
        "AWS::EC2::TransitGatewayConnect",
        "AWS::EC2::TransitGatewayMulticastDomain",
        "AWS::EC2::TransitGatewayMulticastDomainAssociation",
        "AWS::EC2::TransitGatewayMulticastGroupMember",
        "AWS::EC2::TransitGatewayMulticastGroupSource",
        "AWS::EC2::TransitGatewayPeeringAttachment",
        "AWS::EC2::TransitGatewayRoute",
        "AWS::EC2::TransitGatewayRouteTable",
        "AWS::EC2::TransitGatewayRouteTableAssociation",
        "AWS::EC2::TransitGatewayRouteTablePropagation",
        "AWS::EC2::TransitGatewayVpcAttachment",
        "AWS::EC2::VPC",
        "AWS::EC2::VPCCidrBlock",
        "AWS::EC2::VPCDHCPOptionsAssociation",
        "AWS::EC2::VPCEndpoint",
        "AWS::EC2::VPCEndpointConnectionNotification",
        "AWS::EC2::VPCEndpointService",
        "AWS::EC2::VPCEndpointServicePermissions",
        "AWS::EC2::VPCGatewayAttachment",
        "AWS::EC2::VPCPeeringConnection",
        "AWS::EC2::VPNConnection",
        "AWS::EC2::VPNConnectionRoute",
        "AWS::EC2::VPNGateway",
        "AWS::EC2::VPNGatewayRoutePropagation",
        "AWS::EC2::Volume",
        "AWS::EC2::VolumeAttachment",
        "AWS::ECR::PullThroughCacheRule",
        "AWS::ECR::RegistryPolicy",
        "AWS::ECR::ReplicationConfiguration",
        "AWS::ECR::Repository",
        "AWS::ECS::CapacityProvider",
        "AWS::ECS::Cluster",
        "AWS::ECS::ClusterCapacityProviderAssociations",
        "AWS::ECS::PrimaryTaskSet",
        "AWS::ECS::Service",
        "AWS::ECS::TaskDefinition",
        "AWS::ECS::TaskSet",
        "AWS::EFS::AccessPoint",
        "AWS::EFS::FileSystem",
        "AWS::EFS::MountTarget",
        "AWS::EKS::Addon",
        "AWS::EKS::Cluster",
        "AWS::EKS::FargateProfile",
        "AWS::EKS::IdentityProviderConfig",
        "AWS::EKS::Nodegroup",
        "AWS::EMR::Cluster",
        "AWS::EMR::InstanceFleetConfig",
        "AWS::EMR::InstanceGroupConfig",
        "AWS::EMR::SecurityConfiguration",
        "AWS::EMR::Step",
        "AWS::EMR::Studio",
        "AWS::EMR::StudioSessionMapping",
        "AWS::EMRContainers::VirtualCluster",
        "AWS::ElastiCache::CacheCluster",
        "AWS::ElastiCache::GlobalReplicationGroup",
        "AWS::ElastiCache::ParameterGroup",
        "AWS::ElastiCache::ReplicationGroup",
        "AWS::ElastiCache::SecurityGroup",
        "AWS::ElastiCache::SecurityGroupIngress",
        "AWS::ElastiCache::SubnetGroup",
        "AWS::ElastiCache::User",
        "AWS::ElastiCache::UserGroup",
        "AWS::ElasticBeanstalk::Application",
        "AWS::ElasticBeanstalk::ApplicationVersion",
        "AWS::ElasticBeanstalk::ConfigurationTemplate",
        "AWS::ElasticBeanstalk::Environment",
        "AWS::ElasticLoadBalancing::LoadBalancer",
        "AWS::ElasticLoadBalancingV2::Listener",
        "AWS::ElasticLoadBalancingV2::ListenerCertificate",
        "AWS::ElasticLoadBalancingV2::ListenerRule",
        "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "AWS::ElasticLoadBalancingV2::TargetGroup",
        "AWS::Elasticsearch::Domain",
        "AWS::EventSchemas::Discoverer",
        "AWS::EventSchemas::Registry",
        "AWS::EventSchemas::RegistryPolicy",
        "AWS::EventSchemas::Schema",
        "AWS::Events::ApiDestination",
        "AWS::Events::Archive",
        "AWS::Events::Connection",
        "AWS::Events::Endpoint",
        "AWS::Events::EventBus",
        "AWS::Events::EventBusPolicy",
        "AWS::Events::Rule",
        "AWS::Evidently::Experiment",
        "AWS::Evidently::Feature",
        "AWS::Evidently::Launch",
        "AWS::Evidently::Project",
        "AWS::Evidently::Segment",
        "AWS::FIS::ExperimentTemplate",
        "AWS::FMS::NotificationChannel",
        "AWS::FMS::Policy",
        "AWS::FSx::FileSystem",
        "AWS::FSx::Snapshot",
        "AWS::FSx::StorageVirtualMachine",
        "AWS::FSx::Volume",
        "AWS::FinSpace::Environment",
        "AWS::Forecast::Dataset",
        "AWS::Forecast::DatasetGroup",
        "AWS::FraudDetector::Detector",
        "AWS::FraudDetector::EntityType",
        "AWS::FraudDetector::EventType",
        "AWS::FraudDetector::Label",
        "AWS::FraudDetector::Outcome",
        "AWS::FraudDetector::Variable",
        "AWS::GameLift::Alias",
        "AWS::GameLift::Build",
        "AWS::GameLift::Fleet",
        "AWS::GameLift::GameServerGroup",
        "AWS::GameLift::GameSessionQueue",
        "AWS::GameLift::MatchmakingConfiguration",
        "AWS::GameLift::MatchmakingRuleSet",
        "AWS::GameLift::Script",
        "AWS::GlobalAccelerator::Accelerator",
        "AWS::GlobalAccelerator::EndpointGroup",
        "AWS::GlobalAccelerator::Listener",
        "AWS::Glue::Classifier",
        "AWS::Glue::Connection",
        "AWS::Glue::Crawler",
        "AWS::Glue::DataCatalogEncryptionSettings",
        "AWS::Glue::Database",
        "AWS::Glue::DevEndpoint",
        "AWS::Glue::Job",
        "AWS::Glue::MLTransform",
        "AWS::Glue::Partition",
        "AWS::Glue::Registry",
        "AWS::Glue::Schema",
        "AWS::Glue::SchemaVersion",
        "AWS::Glue::SchemaVersionMetadata",
        "AWS::Glue::SecurityConfiguration",
        "AWS::Glue::Table",
        "AWS::Glue::Trigger",
        "AWS::Glue::Workflow",
        "AWS::Greengrass::ConnectorDefinition",
        "AWS::Greengrass::ConnectorDefinitionVersion",
        "AWS::Greengrass::CoreDefinition",
        "AWS::Greengrass::CoreDefinitionVersion",
        "AWS::Greengrass::DeviceDefinition",
        "AWS::Greengrass::DeviceDefinitionVersion",
        "AWS::Greengrass::FunctionDefinition",
        "AWS::Greengrass::FunctionDefinitionVersion",
        "AWS::Greengrass::Group",
        "AWS::Greengrass::GroupVersion",
        "AWS::Greengrass::LoggerDefinition",
        "AWS::Greengrass::LoggerDefinitionVersion",
        "AWS::Greengrass::ResourceDefinition",
        "AWS::Greengrass::ResourceDefinitionVersion",
        "AWS::Greengrass::SubscriptionDefinition",
        "AWS::Greengrass::SubscriptionDefinitionVersion",
        "AWS::GreengrassV2::ComponentVersion",
        "AWS::GroundStation::Config",
        "AWS::GroundStation::DataflowEndpointGroup",
        "AWS::GroundStation::MissionProfile",
        "AWS::GuardDuty::Detector",
        "AWS::GuardDuty::Filter",
        "AWS::GuardDuty::IPSet",
        "AWS::GuardDuty::Master",
        "AWS::GuardDuty::Member",
        "AWS::GuardDuty::ThreatIntelSet",
        "AWS::HealthLake::FHIRDatastore",
        "AWS::IAM::AccessKey",
        "AWS::IAM::Group",
        "AWS::IAM::InstanceProfile",
        "AWS::IAM::ManagedPolicy",
        "AWS::IAM::OIDCProvider",
        "AWS::IAM::Policy",
        "AWS::IAM::Role",
        "AWS::IAM::SAMLProvider",
        "AWS::IAM::ServerCertificate",
        "AWS::IAM::ServiceLinkedRole",
        "AWS::IAM::User",
        "AWS::IAM::UserToGroupAddition",
        "AWS::IAM::VirtualMFADevice",
        "AWS::ImageBuilder::Component",
        "AWS::ImageBuilder::ContainerRecipe",
        "AWS::ImageBuilder::DistributionConfiguration",
        "AWS::ImageBuilder::Image",
        "AWS::ImageBuilder::ImagePipeline",
        "AWS::ImageBuilder::ImageRecipe",
        "AWS::ImageBuilder::InfrastructureConfiguration",
        "AWS::Inspector::AssessmentTarget",
        "AWS::Inspector::AssessmentTemplate",
        "AWS::Inspector::ResourceGroup",
        "AWS::InspectorV2::Filter",
        "AWS::IoT1Click::Device",
        "AWS::IoT1Click::Placement",
        "AWS::IoT1Click::Project",
        "AWS::IoT::AccountAuditConfiguration",
        "AWS::IoT::Authorizer",
        "AWS::IoT::CACertificate",
        "AWS::IoT::Certificate",
        "AWS::IoT::CustomMetric",
        "AWS::IoT::Dimension",
        "AWS::IoT::DomainConfiguration",
        "AWS::IoT::FleetMetric",
        "AWS::IoT::JobTemplate",
        "AWS::IoT::Logging",
        "AWS::IoT::MitigationAction",
        "AWS::IoT::Policy",
        "AWS::IoT::PolicyPrincipalAttachment",
        "AWS::IoT::ProvisioningTemplate",
        "AWS::IoT::ResourceSpecificLogging",
        "AWS::IoT::RoleAlias",
        "AWS::IoT::ScheduledAudit",
        "AWS::IoT::SecurityProfile",
        "AWS::IoT::Thing",
        "AWS::IoT::ThingPrincipalAttachment",
        "AWS::IoT::TopicRule",
        "AWS::IoT::TopicRuleDestination",
        "AWS::IoTAnalytics::Channel",
        "AWS::IoTAnalytics::Dataset",
        "AWS::IoTAnalytics::Datastore",
        "AWS::IoTAnalytics::Pipeline",
        "AWS::IoTEvents::AlarmModel",
        "AWS::IoTEvents::DetectorModel",
        "AWS::IoTEvents::Input",
        "AWS::IoTFleetHub::Application",
        "AWS::IoTSiteWise::AccessPolicy",
        "AWS::IoTSiteWise::Asset",
        "AWS::IoTSiteWise::AssetModel",
        "AWS::IoTSiteWise::Dashboard",
        "AWS::IoTSiteWise::Gateway",
        "AWS::IoTSiteWise::Portal",
        "AWS::IoTSiteWise::Project",
        "AWS::KMS::Alias",
        "AWS::KMS::Key",
        "AWS::KMS::ReplicaKey",
        "AWS::KafkaConnect::Connector",
        "AWS::Kendra::DataSource",
        "AWS::Kendra::Faq",
        "AWS::Kendra::Index",
        "AWS::Kinesis::Stream",
        "AWS::Kinesis::StreamConsumer",
        "AWS::KinesisAnalytics::Application",
        "AWS::KinesisAnalytics::ApplicationOutput",
        "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
        "AWS::KinesisAnalyticsV2::Application",
        "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
        "AWS::KinesisAnalyticsV2::ApplicationOutput",
        "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
        "AWS::KinesisFirehose::DeliveryStream",
        "AWS::KinesisVideo::SignalingChannel",
        "AWS::KinesisVideo::Stream",
        "AWS::LakeFormation::DataCellsFilter",
        "AWS::LakeFormation::DataLakeSettings",
        "AWS::LakeFormation::Permissions",
        "AWS::LakeFormation::PrincipalPermissions",
        "AWS::LakeFormation::Resource",
        "AWS::LakeFormation::Tag",
        "AWS::LakeFormation::TagAssociation",
        "AWS::Lambda::Alias",
        "AWS::Lambda::CodeSigningConfig",
        "AWS::Lambda::EventInvokeConfig",
        "AWS::Lambda::EventSourceMapping",
        "AWS::Lambda::Function",
        "AWS::Lambda::LayerVersion",
        "AWS::Lambda::LayerVersionPermission",
        "AWS::Lambda::Permission",
        "AWS::Lambda::Url",
        "AWS::Lambda::Version",
        "AWS::LicenseManager::Grant",
        "AWS::LicenseManager::License",
        "AWS::Lightsail::Alarm",
        "AWS::Lightsail::Bucket",
        "AWS::Lightsail::Certificate",
        "AWS::Lightsail::Container",
        "AWS::Lightsail::Database",
        "AWS::Lightsail::Disk",
        "AWS::Lightsail::Instance",
        "AWS::Lightsail::LoadBalancer",
        "AWS::Lightsail::LoadBalancerTlsCertificate",
        "AWS::Lightsail::StaticIp",
        "AWS::Location::GeofenceCollection",
        "AWS::Location::Map",
        "AWS::Location::PlaceIndex",
        "AWS::Location::RouteCalculator",
        "AWS::Location::Tracker",
        "AWS::Location::TrackerConsumer",
        "AWS::Logs::Destination",
        "AWS::Logs::LogGroup",
        "AWS::Logs::LogStream",
        "AWS::Logs::MetricFilter",
        "AWS::Logs::QueryDefinition",
        "AWS::Logs::ResourcePolicy",
        "AWS::Logs::SubscriptionFilter",
        "AWS::LookoutMetrics::Alert",
        "AWS::LookoutMetrics::AnomalyDetector",
        "AWS::LookoutVision::Project",
        "AWS::MSK::BatchScramSecret",
        "AWS::MSK::Cluster",
        "AWS::MSK::Configuration",
        "AWS::MSK::ServerlessCluster",
        "AWS::MWAA::Environment",
        "AWS::Macie::CustomDataIdentifier",
        "AWS::Macie::FindingsFilter",
        "AWS::Macie::Session",
        "AWS::ManagedBlockchain::Member",
        "AWS::ManagedBlockchain::Node",
        "AWS::MediaConnect::Flow",
        "AWS::MediaConnect::FlowEntitlement",
        "AWS::MediaConnect::FlowOutput",
        "AWS::MediaConnect::FlowSource",
        "AWS::MediaConnect::FlowVpcInterface",
        "AWS::MediaConvert::JobTemplate",
        "AWS::MediaConvert::Preset",
        "AWS::MediaConvert::Queue",
        "AWS::MediaLive::Channel",
        "AWS::MediaLive::InputSecurityGroup",
        "AWS::MediaPackage::Asset",
        "AWS::MediaPackage::Channel",
        "AWS::MediaPackage::OriginEndpoint",
        "AWS::MediaPackage::PackagingConfiguration",
        "AWS::MediaPackage::PackagingGroup",
        "AWS::MemoryDB::ACL",
        "AWS::MemoryDB::Cluster",
        "AWS::MemoryDB::ParameterGroup",
        "AWS::MemoryDB::SubnetGroup",
        "AWS::MemoryDB::User",
        "AWS::Neptune::DBCluster",
        "AWS::Neptune::DBClusterParameterGroup",
        "AWS::Neptune::DBInstance",
        "AWS::Neptune::DBParameterGroup",
        "AWS::Neptune::DBSubnetGroup",
        "AWS::NetworkFirewall::Firewall",
        "AWS::NetworkFirewall::FirewallPolicy",
        "AWS::NetworkFirewall::LoggingConfiguration",
        "AWS::NetworkFirewall::RuleGroup",
        "AWS::NetworkManager::ConnectAttachment",
        "AWS::NetworkManager::ConnectPeer",
        "AWS::NetworkManager::CoreNetwork",
        "AWS::NetworkManager::CustomerGatewayAssociation",
        "AWS::NetworkManager::Device",
        "AWS::NetworkManager::GlobalNetwork",
        "AWS::NetworkManager::Link",
        "AWS::NetworkManager::LinkAssociation",
        "AWS::NetworkManager::Site",
        "AWS::NetworkManager::SiteToSiteVpnAttachment",
        "AWS::NetworkManager::TransitGatewayRegistration",
        "AWS::NetworkManager::VpcAttachment",
        "AWS::OpenSearchService::Domain",
        "AWS::OpsWorks::App",
        "AWS::OpsWorks::ElasticLoadBalancerAttachment",
        "AWS::OpsWorks::Instance",
        "AWS::OpsWorks::Layer",
        "AWS::OpsWorks::Stack",
        "AWS::OpsWorks::UserProfile",
        "AWS::OpsWorks::Volume",
        "AWS::OpsWorksCM::Server",
        "AWS::Personalize::Dataset",
        "AWS::Personalize::DatasetGroup",
        "AWS::Personalize::Schema",
        "AWS::Personalize::Solution",
        "AWS::QLDB::Ledger",
        "AWS::QLDB::Stream",
        "AWS::QuickSight::Analysis",
        "AWS::QuickSight::Dashboard",
        "AWS::QuickSight::DataSet",
        "AWS::QuickSight::DataSource",
        "AWS::QuickSight::Template",
        "AWS::QuickSight::Theme",
        "AWS::RAM::ResourceShare",
        "AWS::RDS::DBCluster",
        "AWS::RDS::DBClusterParameterGroup",
        "AWS::RDS::DBInstance",
        "AWS::RDS::DBParameterGroup",
        "AWS::RDS::DBProxy",
        "AWS::RDS::DBProxyEndpoint",
        "AWS::RDS::DBProxyTargetGroup",
        "AWS::RDS::DBSecurityGroup",
        "AWS::RDS::DBSecurityGroupIngress",
        "AWS::RDS::DBSubnetGroup",
        "AWS::RDS::EventSubscription",
        "AWS::RDS::GlobalCluster",
        "AWS::RDS::OptionGroup",
        "AWS::RUM::AppMonitor",
        "AWS::Redshift::Cluster",
        "AWS::Redshift::ClusterParameterGroup",
        "AWS::Redshift::ClusterSecurityGroup",
        "AWS::Redshift::ClusterSecurityGroupIngress",
        "AWS::Redshift::ClusterSubnetGroup",
        "AWS::Redshift::EndpointAccess",
        "AWS::Redshift::EndpointAuthorization",
        "AWS::Redshift::EventSubscription",
        "AWS::Redshift::ScheduledAction",
        "AWS::RedshiftServerless::Namespace",
        "AWS::RedshiftServerless::Workgroup",
        "AWS::RefactorSpaces::Application",
        "AWS::RefactorSpaces::Environment",
        "AWS::RefactorSpaces::Route",
        "AWS::RefactorSpaces::Service",
        "AWS::Rekognition::Collection",
        "AWS::Rekognition::Project",
        "AWS::Rekognition::StreamProcessor",
        "AWS::ResilienceHub::App",
        "AWS::ResilienceHub::ResiliencyPolicy",
        "AWS::ResourceGroups::Group",
        "AWS::RoboMaker::Fleet",
        "AWS::RoboMaker::Robot",
        "AWS::RoboMaker::RobotApplication",
        "AWS::RoboMaker::RobotApplicationVersion",
        "AWS::RoboMaker::SimulationApplication",
        "AWS::RoboMaker::SimulationApplicationVersion",
        "AWS::RolesAnywhere::CRL",
        "AWS::RolesAnywhere::Profile",
        "AWS::RolesAnywhere::TrustAnchor",
        "AWS::Route53::CidrCollection",
        "AWS::Route53::DNSSEC",
        "AWS::Route53::HealthCheck",
        "AWS::Route53::HostedZone",
        "AWS::Route53::KeySigningKey",
        "AWS::Route53::RecordSet",
        "AWS::Route53::RecordSetGroup",
        "AWS::Route53Resolver::FirewallDomainList",
        "AWS::Route53Resolver::FirewallRuleGroup",
        "AWS::Route53Resolver::FirewallRuleGroupAssociation",
        "AWS::Route53Resolver::ResolverConfig",
        "AWS::Route53Resolver::ResolverDNSSECConfig",
        "AWS::Route53Resolver::ResolverEndpoint",
        "AWS::Route53Resolver::ResolverQueryLoggingConfig",
        "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
        "AWS::Route53Resolver::ResolverRule",
        "AWS::Route53Resolver::ResolverRuleAssociation",
        "AWS::S3::AccessPoint",
        "AWS::S3::Bucket",
        "AWS::S3::BucketPolicy",
        "AWS::S3::MultiRegionAccessPoint",
        "AWS::S3::MultiRegionAccessPointPolicy",
        "AWS::S3::StorageLens",
        "AWS::S3ObjectLambda::AccessPoint",
        "AWS::S3ObjectLambda::AccessPointPolicy",
        "AWS::S3Outposts::AccessPoint",
        "AWS::S3Outposts::Bucket",
        "AWS::S3Outposts::BucketPolicy",
        "AWS::S3Outposts::Endpoint",
        "AWS::SDB::Domain",
        "AWS::SES::ConfigurationSet",
        "AWS::SES::ConfigurationSetEventDestination",
        "AWS::SES::ContactList",
        "AWS::SES::DedicatedIpPool",
        "AWS::SES::EmailIdentity",
        "AWS::SES::Template",
        "AWS::SNS::Subscription",
        "AWS::SNS::Topic",
        "AWS::SNS::TopicPolicy",
        "AWS::SQS::Queue",
        "AWS::SQS::QueuePolicy",
        "AWS::SSM::Association",
        "AWS::SSM::Document",
        "AWS::SSM::MaintenanceWindow",
        "AWS::SSM::MaintenanceWindowTarget",
        "AWS::SSM::MaintenanceWindowTask",
        "AWS::SSM::Parameter",
        "AWS::SSM::PatchBaseline",
        "AWS::SSM::ResourceDataSync",
        "AWS::SSMContacts::Contact",
        "AWS::SSMContacts::ContactChannel",
        "AWS::SSMIncidents::ReplicationSet",
        "AWS::SSMIncidents::ResponsePlan",
        "AWS::SSO::Assignment",
        "AWS::SSO::InstanceAccessControlAttributeConfiguration",
        "AWS::SSO::PermissionSet",
        "AWS::SageMaker::App",
        "AWS::SageMaker::AppImageConfig",
        "AWS::SageMaker::CodeRepository",
        "AWS::SageMaker::DataQualityJobDefinition",
        "AWS::SageMaker::Device",
        "AWS::SageMaker::DeviceFleet",
        "AWS::SageMaker::Domain",
        "AWS::SageMaker::Endpoint",
        "AWS::SageMaker::EndpointConfig",
        "AWS::SageMaker::FeatureGroup",
        "AWS::SageMaker::Image",
        "AWS::SageMaker::ImageVersion",
        "AWS::SageMaker::Model",
        "AWS::SageMaker::ModelBiasJobDefinition",
        "AWS::SageMaker::ModelExplainabilityJobDefinition",
        "AWS::SageMaker::ModelPackage",
        "AWS::SageMaker::ModelPackageGroup",
        "AWS::SageMaker::ModelQualityJobDefinition",
        "AWS::SageMaker::MonitoringSchedule",
        "AWS::SageMaker::NotebookInstance",
        "AWS::SageMaker::NotebookInstanceLifecycleConfig",
        "AWS::SageMaker::Pipeline",
        "AWS::SageMaker::Project",
        "AWS::SageMaker::UserProfile",
        "AWS::SageMaker::Workteam",
        "AWS::SecretsManager::ResourcePolicy",
        "AWS::SecretsManager::RotationSchedule",
        "AWS::SecretsManager::Secret",
        "AWS::SecretsManager::SecretTargetAttachment",
        "AWS::SecurityHub::Hub",
        "AWS::ServiceCatalog::AcceptedPortfolioShare",
        "AWS::ServiceCatalog::CloudFormationProduct",
        "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
        "AWS::ServiceCatalog::LaunchNotificationConstraint",
        "AWS::ServiceCatalog::LaunchRoleConstraint",
        "AWS::ServiceCatalog::LaunchTemplateConstraint",
        "AWS::ServiceCatalog::Portfolio",
        "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
        "AWS::ServiceCatalog::PortfolioProductAssociation",
        "AWS::ServiceCatalog::PortfolioShare",
        "AWS::ServiceCatalog::ResourceUpdateConstraint",
        "AWS::ServiceCatalog::ServiceAction",
        "AWS::ServiceCatalog::ServiceActionAssociation",
        "AWS::ServiceCatalog::StackSetConstraint",
        "AWS::ServiceCatalog::TagOption",
        "AWS::ServiceCatalog::TagOptionAssociation",
        "AWS::ServiceCatalogAppRegistry::Application",
        "AWS::ServiceCatalogAppRegistry::AttributeGroup",
        "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
        "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
        "AWS::ServiceDiscovery::HttpNamespace",
        "AWS::ServiceDiscovery::Instance",
        "AWS::ServiceDiscovery::PrivateDnsNamespace",
        "AWS::ServiceDiscovery::PublicDnsNamespace",
        "AWS::ServiceDiscovery::Service",
        "AWS::Signer::ProfilePermission",
        "AWS::Signer::SigningProfile",
        "AWS::StepFunctions::Activity",
        "AWS::StepFunctions::StateMachine",
        "AWS::Synthetics::Canary",
        "AWS::Synthetics::Group",
        "AWS::Timestream::Database",
        "AWS::Timestream::ScheduledQuery",
        "AWS::Timestream::Table",
        "AWS::Transfer::Server",
        "AWS::Transfer::User",
        "AWS::Transfer::Workflow",
        "AWS::WAF::ByteMatchSet",
        "AWS::WAF::IPSet",
        "AWS::WAF::Rule",
        "AWS::WAF::SizeConstraintSet",
        "AWS::WAF::SqlInjectionMatchSet",
        "AWS::WAF::WebACL",
        "AWS::WAF::XssMatchSet",
        "AWS::WAFRegional::ByteMatchSet",
        "AWS::WAFRegional::GeoMatchSet",
        "AWS::WAFRegional::IPSet",
        "AWS::WAFRegional::RateBasedRule",
        "AWS::WAFRegional::RegexPatternSet",
        "AWS::WAFRegional::Rule",
        "AWS::WAFRegional::SizeConstraintSet",
        "AWS::WAFRegional::SqlInjectionMatchSet",
        "AWS::WAFRegional::WebACL",
        "AWS::WAFRegional::WebACLAssociation",
        "AWS::WAFRegional::XssMatchSet",
        "AWS::WAFv2::IPSet",
        "AWS::WAFv2::LoggingConfiguration",
        "AWS::WAFv2::RegexPatternSet",
        "AWS::WAFv2::RuleGroup",
        "AWS::WAFv2::WebACL",
        "AWS::WAFv2::WebACLAssociation",
        "AWS::WorkSpaces::Workspace",
        "AWS::XRay::Group",
        "AWS::XRay::SamplingRule",
        "Alexa::ASK::Skill"
      ]
    },
    "_Type": {
      "title": "_Type",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/CfnResourceType"
        }
      }
    },
    "Partial": {
      "title": "Partial",
      "$ref": "#/definitions/_Type"
    }
  }
}
